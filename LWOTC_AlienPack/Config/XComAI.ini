;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
; XCOMGAMESTATE_AIGROUP
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************

[XComGame.XComGameState_AIGroup]
+FallbackExclusionList="HiveQueen"
+FallbackExclusionList="ChryssalidSoldier"

;*****************************************************************************************************************************************************************************************************
; Movement changes.
;*****************************************************************************************************************************************************************************************************
-m_arrMoveWeightProfile=(Profile=MWP_RandomCover, fCoverWeight=0.5f, fRandWeight=5.0)
+m_arrMoveWeightProfile=(Profile=MWP_RandomCover, fCoverWeight=2.0f, fRandWeight=5.0, fHeightWeight=2.0f)
-m_arrMoveWeightProfile=(Profile=MWP_MeleeDefensive, fCoverWeight=0.2f, fDistanceWeight=1.0f, fFlankingWeight=0.0f, fEnemyVisWeight=-0.5f, fEnemyVisWeightPeak1=2.0, fAllyVisWeight=1.0f, fCloseModifier=1.1f, fFarModifier=0.9f,fPriorityDistWeight=1.0f, bPrioritizeClosest=1, bIsMelee=1)
+m_arrMoveWeightProfile=(Profile=MWP_MeleeDefensive, fCoverWeight=0.6f, fDistanceWeight=1.0f, fFlankingWeight=0.0f, fEnemyVisWeight=-0.5f, fEnemyVisWeightPeak1=2.0, fAllyVisWeight=1.0f, fCloseModifier=1.1f, fFarModifier=0.9f,fPriorityDistWeight=1.0f, bPrioritizeClosest=1, bIsMelee=1)

;*****************************************************************************************************************************************************************************************************
; Movement additions.
;*****************************************************************************************************************************************************************************************************
+m_arrMoveWeightProfile=(Profile=MWP_GrappleFar, fCoverWeight=1.0f, fDistanceWeight=3.0f, fFlankingWeight=0.3f, fHeightWeight=1.0f, fCloseModifier=0.8f, fFarModifier=1.2f, MinimumTileDist=10.0f)
+m_arrMoveWeightProfile=(Profile=MWP_GrappleClose, fCoverWeight=1.0f, fDistanceWeight=0.5f, fFlankingWeight=0.1f, fEnemyVisWeight=1.0f, fEnemyVisWeightPeak1=0.5f, fHeightWeight=0.5f, fCloseModifier=1.0f, fFarModifier=1.0f)

;*****************************************************************************************************************************************************************************************************
; LONG WAR: SNIPER MOVEMENT, modified with minimum movement.
;*****************************************************************************************************************************************************************************************************
+m_arrMoveWeightProfile=(Profile=MWP_SniperMove, fCoverWeight=1.0f, fDistanceWeight=2.0f, fFlankingWeight=0.5f, fEnemyVisWeight=1.0f, fEnemyVisWeightPeak1=2.0, fAllyVisWeight=0.2f, fCloseModifier=0.8f, fFarModifier=1.2f, MinimumTileDist=6.0f)

;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
; AOE PROFILES
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************

; **************************************************************************************************************************************************************************************************
; LONG WAR UNITS
; **************************************************************************************************************************************************************************************************
+AoEProfiles=( Profile=SentryGrenadeManyProfile,  Ability=ThrowGrenade, bUsePrecomputePath=1, MinTargets=3, bFailOnFriendlyFire=1, bFailOnObjectiveFire=1, bIgnoreSelfDamage=False, bRequireLoS=1)
+AoEProfiles=( Profile=SentryGrenadeFewProfile,  Ability=ThrowGrenade, bUsePrecomputePath=1, MinTargets=2, bFailOnFriendlyFire=1, bFailOnObjectiveFire=1, bIgnoreSelfDamage=False, bRequireLoS=1)
+AoEProfiles=( Profile=RocketeerGrenadeManyProfile,  Ability=ThrowGrenade, bUsePrecomputePath=1, MinTargets=2, bFailOnFriendlyFire=1, bFailOnObjectiveFire=1, bIgnoreSelfDamage=False)
+AoEProfiles=( Profile=RocketeerGrenadeSingleProfile,  Ability=ThrowGrenade, bUsePrecomputePath=1, MinTargets=1, bFailOnFriendlyFire=1, bFailOnObjectiveFire=1, bIgnoreSelfDamage=False)
+AoEProfiles=( Profile=RocketLauncherMassesProfile, Ability=RocketLauncher, bUsePrecomputePath=1, bFailOnFriendlyFire=1, bFailOnObjectiveFire=1, MinTargets=4, bRequireLoS=True)
+AoEProfiles=( Profile=RocketLauncherManyProfile, Ability=RocketLauncher, bUsePrecomputePath=1, bFailOnFriendlyFire=1, bFailOnObjectiveFire=1, MinTargets=3, bRequireLoS=True)
+AoEProfiles=( Profile=RocketLauncherFewProfile, Ability=RocketLauncher, bUsePrecomputePath=1, bFailOnFriendlyFire=1, bFailOnObjectiveFire=1, MinTargets=2, bRequireLoS=True)
+AoEProfiles=( Profile=RocketLauncherSingleProfile, Ability=RocketLauncher, bUsePrecomputePath=1, bFailOnFriendlyFire=1, bFailOnObjectiveFire=1, MinTargets=1, bRequireLoS=True)
+AoEProfiles=( Profile=GrenadeLauncherProfile, Ability=LaunchGrenade, bUsePrecomputePath=1, bFailOnFriendlyFire=1, MinTargets=2)
+AoEProfiles=( Profile=GrenadeLauncherOneOrMoreProfile, Ability=LaunchGrenade, bUsePrecomputePath=1, bFailOnFriendlyFire=1, MinTargets=1)
+AoEProfiles=( Profile=GrenadeLauncherM1ThreeOrMoreProfile, Ability=LaunchGrenade, bUsePrecomputePath=1, bFailOnFriendlyFire=1, MinTargets=3)
+AoEProfiles=( Profile=GrenadeLauncherM1MinimumTwoProfile, Ability=LaunchGrenade, bUsePrecomputePath=1, bFailOnFriendlyFire=1, MinTargets=2)
+AoEProfiles=( Profile=MassReanimation_LWManyProfile, Ability=MassReanimation_LW, bTargetEnemy=0, bTargetCivilians=0, bTargetCorpses=1, bFailOnObjectiveFire=0, bFailOnFriendlyFire=0, MinTargets=3)
+AoEProfiles=( Profile=MassReanimation_LWFewProfile, Ability=MassReanimation_LW, bTargetEnemy=0, bTargetCivilians=0, bTargetCorpses=1, bFailOnObjectiveFire=0, bFailOnFriendlyFire=0, MinTargets=2)
+AoEProfiles=( Profile=MassMindspinManyProfile, Ability=MassMindspin, bFailOnObjectiveFire=0, bFailOnFriendlyFire=0, MinTargets=3)

;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
; XG AI BT BEHAVIOR TREE
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************

[XComGame.X2AIBTBehaviorTree]

;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
; GENERIC DESTUPIDIFICATION CODE / SHARED AMONG ALL UNITS
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************

; MEDIKIT - Healing support.
+EquivalentAbilities=( KeyName=AFAdventMedikit, EquivalentAbilityName[0]=MedikitHeal, EquivalentAbilityName[1]=NanoMedikitHeal)

; ALLOWS LONGWATCH ON OVERWATCH
-EquivalentAbilities=( KeyName=Overwatch, EquivalentAbilityName[0]=SniperRifleOverwatch )
+EquivalentAbilities=( KeyName=Overwatch, EquivalentAbilityName[0]=SniperRifleOverwatch, EquivalentAbilityName[1]=Longwatch )
+EquivalentAbilities=( KeyName=SniperRifleOverwatch, EquivalentAbilityName[0]=Longwatch )

; MELEE
-EquivalentAbilities=( KeyName=StandardMelee, EquivalentAbilityName[0]=BigDamnPunch, EquivalentAbilityName[1]=DevastatingPunch, EquivalentAbilityName[2]=ChryssalidSlash, EquivalentAbilityName[3]=Bayonet, EquivalentAbilityName[4]=SwordSlice, EquivalentAbilityName[5]=Reaper, EquivalentAbilityName[6]=StunLance, EquivalentAbilityName[7]=AnimaConsume, EquivalentAbilityName[8]=ScythingClaws, EquivalentAbilityName[9]=Bind, EquivalentAbilityName[10]=ChryssalidSlashMP)
-EquivalentAbilities=( KeyName=StandardMelee, EquivalentAbilityName[0]=BigDamnPunch, EquivalentAbilityName[1]=DevastatingPunch, EquivalentAbilityName[2]=ChryssalidSlash, EquivalentAbilityName[3]=Bayonet, EquivalentAbilityName[4]=SwordSlice, EquivalentAbilityName[5]=Reaper, EquivalentAbilityName[6]=StunLance, EquivalentAbilityName[7]=AnimaConsume, EquivalentAbilityName[8]=ScythingClaws, EquivalentAbilityName[9]=Bind, EquivalentAbilityName[10]=ChryssalidSlashMP, EquivalentAbilityName[11]=ViperNeonateBindAbility, EquivalentAbilityName[12]=QueenDevastatingPunch, EquivalentAbilityName[13]=StandardMelee_NoEnd)
-EquivalentAbilities=( KeyName=StandardMelee, EquivalentAbilityName[0]=BigDamnPunch, EquivalentAbilityName[1]=DevastatingPunch, EquivalentAbilityName[2]=ChryssalidSlash, EquivalentAbilityName[3]=Bayonet, EquivalentAbilityName[4]=SwordSlice, EquivalentAbilityName[5]=Reaper, EquivalentAbilityName[6]=StunLance, EquivalentAbilityName[7]=AnimaConsume, EquivalentAbilityName[8]=ScythingClaws, EquivalentAbilityName[9]=Bind, EquivalentAbilityName[10]=ChryssalidSlashMP, EquivalentAbilityName[11]=SkirmisherMelee)
+EquivalentAbilities=( KeyName=StandardMelee, EquivalentAbilityName[0]=BigDamnPunch, EquivalentAbilityName[1]=DevastatingPunch, EquivalentAbilityName[2]=ChryssalidSlash, EquivalentAbilityName[3]=Bayonet, EquivalentAbilityName[4]=SwordSlice, EquivalentAbilityName[5]=Reaper, EquivalentAbilityName[6]=StunLance, EquivalentAbilityName[7]=AnimaConsume, EquivalentAbilityName[8]=ScythingClaws, EquivalentAbilityName[9]=Bind, EquivalentAbilityName[10]=ChryssalidSlashMP, EquivalentAbilityName[11]=ViperNeonateBindAbility, EquivalentAbilityName[12]=QueenDevastatingPunch, EquivalentAbilityName[13]=StandardMelee_NoEnd, EquivalentAbilityName[14]=StandardMovingMelee, EquivalentAbilityName[15]=SkirmisherMelee)

; LW LIGHT EM UP
+EquivalentAbilities=( KeyName=StandardShot, EquivalentAbilityName[0]=LightEmUp )

; FLUSH/ROUST
+Behaviors=(BehaviorName=FlushRoot, NodeType=Selector, Child[0]=FallBackWithLoSUnsafe, Child[1]=FallBackUnsafe, Child[2]=MoveDefensiveUnsafe, Child[3]=MoveStandardUnsafe, Child[4]=SkipMove)

; MEDIKIT BEHAVIOR
+Behaviors=(BehaviorName=IsAbilityAvailable-AFAdventMedikit, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-AFAdventMedikit, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AFAdventMedikit, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-AFAdventMedikit, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-AFAdventMedikit, NodeType=Action)
+Behaviors=(BehaviorName=TryAFAdventMedikitOnAnyTarget, NodeType=Sequence, Child[0]=IsAbilityAvailable-AFAdventMedikit, Child[1]=SelectTargetForAFAdventMedikit, Child[2]=SelectAbility-AFAdventMedikit)
+Behaviors=(BehaviorName=SelectTargetForAFAdventMedikit, NodeType=Sequence, Child[0]=SetTargetStack-AFAdventMedikit, Child[1]=SelectBestTargetForAFAdventMedikit, Child[2]=HasValidTarget-AFAdventMedikit)
+Behaviors=(BehaviorName=SelectBestTargetForAFAdventMedikit, NodeType=RepeatUntilFail, Child[0]=EvaluateTargetsAFAdventMedikit)
+Behaviors=(BehaviorName=EvaluateTargetsAFAdventMedikit, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetScoreAFAdventMedikit, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=TargetScoreAFAdventMedikit, NodeType=Sequence, Child[0]=AFTypeConditions, Child[1]=SSAFScoreIfDying, Child[2]=SSAFScoreIfWounded, Child[3]=TargetScoreMindControlledAlly, Child[4]=AddToTargetScore_0)
+Behaviors=(BehaviorName=AFTypeConditions, NodeType=Sequence, Child[0]=AFTargetAlienOrADVENT, Child[1]=AFTargetIsNotRobotic, Child[2]=TargetIsAlly)
+Behaviors=(BehaviorName=AFTargetIsNotRobotic, NodeType=Inverter, Child[0]=TargetIsRobotic)
+Behaviors=(BehaviorName=AFTargetAlienOrADVENT, NodeType=Selector, Child[0]=TargetIsAdvent, Child[1]=TargetIsAlien)
+Behaviors=(BehaviorName=TargetWoundedEnough, NodeType=TargetStatCondition, Param[0]=eStat_HP, Param[1]="<=", Param[2]="70%")
+Behaviors=(BehaviorName=SSAFScoreIfDying, NodeType=Successor, Child[0]=AFScoreIfDying)
+Behaviors=(BehaviorName=AFScoreIfDying, NodeType=Sequence, Child[0]=TargetHasLowHP, Child[1]=AddToTargetScore_30)
+Behaviors=(BehaviorName=SSAFScoreIfWounded, NodeType=Successor, Child[0]=AFScoreIfWounded)
+Behaviors=(BehaviorName=AFScoreIfWounded, NodeType=Sequence, Child[0]=TargetWoundedEnough, Child[1]=AddToTargetScore_15)

+Behaviors=(BehaviorName=HuntEnemyWithCoverSeeNoOne, NodeType=Sequence, Child[0]=NoVisibleEnemies, Child[1]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=HuntEnemySeeNoOne, NodeType=Sequence, Child[0]=NoVisibleEnemies, Child[1]=HuntEnemy)
-Behaviors=(BehaviorName=FlankedMoveSelector, NodeType=Selector, Child[0]=MoveAdvanceToCoverLoSUnsafe, Child[1]=MoveAdvanceToCoverUnsafe, Child[2]=FallBack)
+Behaviors=(BehaviorName=FlankedMoveSelector, NodeType=Selector, Child[0]=FallBackWithLOS, Child[1]=FallBack, Child[2]=SelectMove_JobOrDefensive)

; ALIEN VERSION OF FIRE REMOVAL - DOESNT WORK - AffectedByEffect-Burning doesn't work, but if it does this will kick in.
+Behaviors=(BehaviorName=TryToCleanseBurning, NodeType=Selector, Child[0]=BOTETryHunkerToCleanseBurnSafe, Child[1]=BOTEEmergencyBurnRemoval)
+Behaviors=(BehaviorName=BOTEAmIBurning, NodeType=Selector, Child[0]=AffectedByEffect-Burning)
+Behaviors=(BehaviorName=BOTETryHunkerToCleanseBurnSafe, NodeType=Sequence, Child[0]=NotFlanked, Child[1]=BOTEAmIBurning, Child[2]=BOTEBurningLowEnemyCount, Child[3]=DoCowerNoAnim)
+Behaviors=(BehaviorName=BOTEBurningLowEnemyCount, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]="<=", Param[2]=3)
+Behaviors=(BehaviorName=BOTEEmergencyBurnRemoval, NodeType=Sequence, Child[0]=BOTEAmIBurning, Child[1]=HasLowHP, Child[2]=DoCowerNoAnim)

; ADVENT VERSION OF FIRE REMOVAL - DOESNT WORK - AffectedByEffect-Burning doesn't work, but if it does this will kick in.
+Behaviors=(BehaviorName=TryToRemoveBurning, NodeType=Selector, Child[0]=TryHunkerToCleanseBurnSafe, Child[1]=EmergencyBurnRemoval)
+Behaviors=(BehaviorName=AmIBurning, NodeType=Selector, Child[0]=AffectedByEffect-Burning)
+Behaviors=(BehaviorName=TryHunkerToCleanseBurnSafe, NodeType=Sequence, Child[0]=NotFlanked, Child[1]=IsLastActionPoint, Child[2]=AmIBurning, Child[3]=BurningLowEnemyCount, Child[4]=DoCower)
+Behaviors=(BehaviorName=BurningLowEnemyCount, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]="<=", Param[2]=3)
+Behaviors=(BehaviorName=EmergencyBurnRemoval, NodeType=Sequence, Child[0]=AmIBurning, Child[1]=HasLowHP, Child[2]=DoCower)

; ALIENS HUNKER DOWN SUPPORT
+Behaviors=(BehaviorName=IsAbilityAvailable-HunkerDownNoAnim, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-HunkerDownNoAnim, NodeType=Action)
-Behaviors=(BehaviorName=DoCower, NodeType=Sequence, Child[0]=IsAbilityAvailable-HunkerDown, Child[1]=SelectAbility-HunkerDown)
+Behaviors=(BehaviorName=DoCower, NodeType=Selector, Child[0]=DoCowerRegular, Child[1]=DoCowerNoAnim)
+Behaviors=(BehaviorName=DoCowerRegular, NodeType=Sequence, Child[0]=IsAbilityAvailable-HunkerDown, Child[1]=SelectAbility-HunkerDown)
+Behaviors=(BehaviorName=DoCowerNoAnim, NodeType=Sequence, Child[0]=IsAbilityAvailable-HunkerDownNoAnim, Child[1]=SelectAbility-HunkerDownNoAnim)

; PUNISH FLANKED ENEMIES FROM SAFETY - ADVENT VERSION
+Behaviors=(BehaviorName=ADVENTPunishFlankedEnemyFirstAction, NodeType=Sequence, Child[0]=NotFlanked, Child[1]=IsAbilityAvailable-StandardShot, Child[2]=FP_SelectFlankedEnemyTarget, Child[3]=ShootTargetChance50)
+Behaviors=(BehaviorName=ADVENTPunishFlankedEnemyLastAction, NodeType=Sequence, Child[0]=NotFlanked, Child[1]=IsAbilityAvailable-StandardShot, Child[2]=FP_SelectFlankedEnemyTarget, Child[3]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=FP_SelectFlankedEnemyTarget, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=FP_EvaluateFlankedEnemyTargets, Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=FP_EvaluateFlankedEnemyTargets, NodeType=RepeatUntilFail, Child[0]=FP_EvaluateFlankedEnemies)
+Behaviors=(BehaviorName=FP_EvaluateFlankedEnemies, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=FP_SSScoreFlankedEnemy, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=FP_SSScoreFlankedEnemy, NodeType=Successor, Child[0]=FP_ScoreFlankedEnemy)
+Behaviors=(BehaviorName=FP_ScoreFlankedEnemy, NodeType=Sequence, Child[0]=IsFlankingTarget, Child[1]=TargetIsEnemy, Child[2]=TargetNotMindControlled, Child[3]=GenericTargetEvaluations)
; PUNISH FLANKED ENEMIES FROM SAFETY - ADVENT VERSION - PISTOL ONLY
+Behaviors=(BehaviorName=ADVENTPistolPunishFlankedEnemyFirstAction, NodeType=Sequence, Child[0]=NotFlanked, Child[1]=IsAbilityAvailable-PistolStandardShot, Child[2]=FP_Pistol_SelectFlankedEnemyTarget, Child[3]=PistolShootTargetChance50)
+Behaviors=(BehaviorName=ADVENTPistolPunishFlankedEnemyLastAction, NodeType=Sequence, Child[0]=NotFlanked, Child[1]=IsAbilityAvailable-PistolStandardShot, Child[2]=FP_Pistol_SelectFlankedEnemyTarget, Child[3]=SelectAbility-PistolStandardShot)
+Behaviors=(BehaviorName=PistolShootTargetChance50, NodeType=RandFilter, Child[0]=SelectAbility-PistolStandardShot, Param[0]=50)
+Behaviors=(BehaviorName=FP_Pistol_SelectFlankedEnemyTarget, NodeType=Sequence, Child[0]=SetTargetStack-PistolStandardShot, Child[1]=FP_Pistol_EvaluateFlankedEnemyTargets, Child[2]=HasValidTarget-PistolStandardShot)
+Behaviors=(BehaviorName=FP_Pistol_EvaluateFlankedEnemyTargets, NodeType=RepeatUntilFail, Child[0]=FP_Pistol_EvaluateFlankedEnemies)
+Behaviors=(BehaviorName=FP_Pistol_EvaluateFlankedEnemies, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=FP_Pistol_SSScoreFlankedEnemy, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=FP_Pistol_SSScoreFlankedEnemy, NodeType=Successor, Child[0]=FP_Pistol_ScoreFlankedEnemy)
+Behaviors=(BehaviorName=FP_Pistol_ScoreFlankedEnemy, NodeType=Sequence, Child[0]=IsFlankingTarget, Child[1]=TargetIsEnemy, Child[2]=TargetNotMindControlled, Child[3]=GenericTargetEvaluations)
; PUNISH FLANKED ENEMIES FROM SAFETY - ALIEN VERSION
+Behaviors=(BehaviorName=ALIENPunishFlankedEnemyFirstAction, NodeType=Sequence, Child[0]=NotFlanked, Child[1]=IsAbilityAvailable-StandardShot, Child[2]=BOTE_SelectFlankedEnemyTarget, Child[3]=ShootTargetChance50)
+Behaviors=(BehaviorName=ALIENPunishFlankedEnemyLastAction, NodeType=Sequence, Child[0]=NotFlanked, Child[1]=IsAbilityAvailable-StandardShot, Child[2]=BOTE_SelectFlankedEnemyTarget, Child[3]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=BOTE_SelectFlankedEnemyTarget, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=BOTE_EvaluateFlankedEnemyTargets, Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=BOTE_EvaluateFlankedEnemyTargets, NodeType=RepeatUntilFail, Child[0]=BOTE_EvaluateFlankedEnemies)
+Behaviors=(BehaviorName=BOTE_EvaluateFlankedEnemies, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=BOTE_SSScoreFlankedEnemy, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=BOTE_SSScoreFlankedEnemy, NodeType=Successor, Child[0]=BOTE_ScoreFlankedEnemy)
+Behaviors=(BehaviorName=BOTE_ScoreFlankedEnemy, NodeType=Sequence, Child[0]=IsFlankingTarget, Child[1]=TargetIsEnemy, Child[2]=TargetNotMindControlled, Child[3]=GenericTargetEvaluations)

; NO SHOOTING AT 0% (REMOVALS PREVENTING DUPLICATION)
-Behaviors=(BehaviorName=ShootIfAvailable, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=ShootIfAvailable, NodeType=Sequence, Child[0]=MinimumChanceShotCondition, Child[1]=IsAbilityAvailable-StandardShot, Child[2]=SelectTargetForStandardShot, Child[3]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=AllShotsCannotHit, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]="<", Param[2]="1")
+Behaviors=(BehaviorName=MinimumChanceShotCondition, NodeType=Inverter, Child[0]=AllShotsCannotHit)

; HUNTING IS EXCLUSIVE TO NOT SEEING ANY ENEMIES
+Behaviors=(BehaviorName=ADVENTHuntEnemyWithCoverSeeNoOne, NodeType=Sequence, Child[0]=NoVisibleEnemies, Child[1]=AFHuntEnemyWithCoverUnsafe)
+Behaviors=(BehaviorName=AFHuntEnemyWithCoverUnsafe, NodeType=Sequence, Child[0]=SetAlertDataStack, Child[1]=GenericSelectBestAlert, Child[2]=HasValidAlertDataLocation, Child[3]=AlertDataMovementUseCover, Child[4]=MoveStandardWithDestination)
+Behaviors=(BehaviorName=ADVENTHuntEnemySeeNoOne, NodeType=Sequence, Child[0]=NoVisibleEnemies, Child[1]=HuntEnemyUnsafe)

; FLANKED = DEFENSIVE NOT OFFENSIVE POSITIONING
-Behaviors=(BehaviorName=FlankedMoveSelector, NodeType=Selector, Child[0]=MoveAdvanceToCoverLoSUnsafe, Child[1]=MoveAdvanceToCoverUnsafe, Child[2]=FallBack)
+Behaviors=(BehaviorName=FlankedMoveSelector, NodeType=Selector, Child[0]=FallBackWithLOS, Child[1]=FallBack, Child[2]=SelectMove_JobOrDefensive)

; STOP MOVING TO FLANKED POSITIONS GODDAMIT (FORCE UNFLANKED)
-Behaviors=(BehaviorName=MoveDefensiveUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=FindDestination-MWP_Defensive, Child[3]=SelectAbility-StandardMove)
-Behaviors=(BehaviorName=MoveAggressiveUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=FindDestinationWithLoS-MWP_Aggressive, Child[3]=SelectAbility-StandardMove)
-Behaviors=(BehaviorName=FallBackWithLoSUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=FindDestinationWithLoS-MWP_FallBack, Child[3]=SelectAbility-StandardMove)
-Behaviors=(BehaviorName=FallBackUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=FindBestFallbackDestination, Child[3]=SelectAbility-StandardMove)
-Behaviors=(BehaviorName=HuntWithLoS, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToEnemyLoS, Child[2]=FindDestination-MWP_Hunting)
-Behaviors=(BehaviorName=BestHuntDestinationWithoutLoS, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=FindDestination-MWP_Hunting)
-Behaviors=(BehaviorName=MoveAdvanceToCoverUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=FindDestination-MWP_AdvanceCover, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=MoveDefensiveUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=RestrictToUnflanked, Child[3]=FindDestination-MWP_Defensive, Child[4]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=MoveAggressiveUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=RestrictToUnflanked, Child[3]=FindDestinationWithLoS-MWP_Aggressive, Child[4]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FallBackWithLoSUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=RestrictToUnflanked, Child[3]=FindDestinationWithLoS-MWP_FallBack, Child[4]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FallBackUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=RestrictToUnflanked, Child[3]=FindBestFallbackDestination, Child[4]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=HuntWithLoS, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToEnemyLoS, Child[2]=RestrictToUnflanked, Child[3]=FindDestination-MWP_Hunting)
+Behaviors=(BehaviorName=BestHuntDestinationWithoutLoS, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToUnflanked, Child[2]=FindDestination-MWP_Hunting)
+Behaviors=(BehaviorName=MoveAdvanceToCoverUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=RestrictToUnflanked, Child[3]=FindDestination-MWP_AdvanceCover, Child[4]=SelectAbility-StandardMove)

; MARK TARGET SCORE CHANGE
-Behaviors=(BehaviorName=ScoreTargetIfMarked, NodeType=Sequence, Child[0]=TargetAffectedByEffect-MarkedTarget, Child[1]=AddToTargetScore_45) ; bump a marked target up to the next aim tier with a bonus, over even a killshot
+Behaviors=(BehaviorName=ScoreTargetIfMarked, NodeType=Sequence, Child[0]=TargetAffectedByEffect-MarkedTarget, Child[1]=AddToTargetScore_15)

; MASTER SUPPRESSION CONTROLLER - 33% MAX
+Behaviors=(BehaviorName=SuppressIdealChanceFilter, NodeType=RandFilter, Child[0]=IsAbilityAvailable-Suppression, Param[0]=33)
; EXCEPT GUNNERS.
+Behaviors=(BehaviorName=SuppressGunnerIdealChanceFilter, NodeType=RandFilter, Child[0]=IsAbilityAvailable-AreaSuppression, Param[0]=50)

; SUPPRESSION FIXES (LOST, ETC.)
-Behaviors=(BehaviorName=EvaluateSuppressionTargetByAim, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSScoreUnsuppressedByHitChanceValue, Child[2]=TargetScoreInvalidateCivilians, Child[3]=UpdateBestTarget)
-Behaviors=(BehaviorName=EvaluateSuppressionTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetScoreUnsuppressedByClosestDistance, Child[2]=TargetScoreInvalidateCivilians, Child[3]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSScoreOutIfIncapacitated, NodeType=Successor, Child[0]=ScoreOutIfIncapacitated)
+Behaviors=(BehaviorName=ScoreOutIfIncapacitated, NodeType=Selector, Child[0]=TargetIsPanickedScoreOut, Child[1]=TargetIsShatteredScoreOut, Child[2]=TargetIsObsessedScoreOut, Child[3]=TargetIsBerserkScoreOut, Child[4]=TargetIsStunnedScoreOut, Child[5]=TargetIsDazedScoreOut)
+Behaviors=(BehaviorName=ScoreOutIfBound, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Bind, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=EvaluateSuppressionTargetByAim, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSScoreUnsuppressedByHitChanceValue, Child[2]=TargetScoreInvalidateCivilians, Child[3]=SSScoreTargetOutIfLost, Child[4]=SSScoreOutIfIncapacitated, Child[5]=UpdateBestTarget)
+Behaviors=(BehaviorName=EvaluateSuppressionTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetScoreUnsuppressedByClosestDistance, Child[2]=TargetScoreInvalidateCivilians, Child[3]=SSScoreTargetOutIfLost, Child[4]=SSScoreOutIfIncapacitated, Child[5]=UpdateBestTarget)
+Behaviors=(BehaviorName=TargetIsPanickedScoreOut, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Panicked, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=TargetIsShatteredScoreOut, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Shattered, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=TargetIsObsessedScoreOut, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Obsessed, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=TargetIsBerserkScoreOut, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Berserk, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=TargetIsStunnedScoreOut, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Stunned, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=TargetIsDazedScoreOut, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Dazed, Child[1]=AddToTargetScore_-1000)
+Behaviors=(BehaviorName=TargetAffectedByEffect-Stunned, NodeType=Condition)
+Behaviors=(BehaviorName=TargetAffectedByEffect-Panicked, NodeType=Condition)
+Behaviors=(BehaviorName=TargetAffectedByEffect-Obsessed, NodeType=Condition)
+Behaviors=(BehaviorName=TargetAffectedByEffect-Shattered, NodeType=Condition)
+Behaviors=(BehaviorName=TargetAffectedByEffect-Berserk, NodeType=Condition)
+Behaviors=(BehaviorName=TargetAffectedByEffect-Bind, NodeType=Condition)
-Behaviors=(BehaviorName=ScoreMarkTargetOption, NodeType=Sequence, Child[0]=TargetIsEnemy, Child[1]=TargetIsNotCivilian, Child[2]=ScoreByHP, Child[3]=TargetScoreHealth_HighFirst, Child[4]=TargetScoreHighestSoldierRank, Child[5]=TargetScoreTeamVisibility, Child[6]=SometimesRandomizeTarget, Child[7]=AvoidBoundAndPanickedTargets, Child[8]=SSTeamSpecificModifiers)
+Behaviors=(BehaviorName=ScoreMarkTargetOption, NodeType=Sequence, Child[0]=TargetIsEnemy, Child[1]=TargetIsNotCivilian, Child[2]=ScoreByHP, Child[3]=TargetScoreHealth_HighFirst, Child[4]=TargetScoreHighestSoldierRank, Child[5]=TargetScoreTeamVisibility, Child[6]=SometimesRandomizeTarget, Child[7]=AvoidBoundAndPanickedTargets, Child[8]=SSTeamSpecificModifiers, Child[9]=SSScoreTargetOutIfLost)
-Behaviors=(BehaviorName=TargetSelectIterationForGetOverHere, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations, Child[2]=TargetScoreInvalidateCivilians, Child[3]=SSTargetScoreInvalidTonguePullTargets, Child[4]=UpdateBestTarget)
+Behaviors=(BehaviorName=TargetSelectIterationForGetOverHere, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations, Child[2]=TargetScoreInvalidateCivilians, Child[3]=SSTargetScoreInvalidTonguePullTargets, Child[4]=SSScoreTargetOutIfLost, Child[5]=UpdateBestTarget)
-Behaviors=(BehaviorName=EvaluateForStasis, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetNotTeamResistance, Child[2]=TargetIsEnemy, Child[3]=TargetIsNotEnemyVIP, Child[4]=TargetNotBoundOrPanicked, Child[5]=TargetIsAttackable, Child[6]=TargetScoreByScaledDistance-1, Child[7]=AddToTargetScore_100, Child[8]=AddSmallRandomTargetScore)
+Behaviors=(BehaviorName=EvaluateForStasis, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetNotTeamResistance, Child[2]=TargetIsEnemy, Child[3]=TargetIsNotEnemyVIP, Child[4]=TargetNotBoundOrPanicked, Child[5]=TargetIsAttackable, Child[6]=TargetScoreByScaledDistance-1, Child[7]=AddToTargetScore_100, Child[8]=AddSmallRandomTargetScore, Child[9]=SSScoreTargetOutIfLost, Child[10]=SSBumpScoreIfMindControlled)
+Behaviors=(BehaviorName=SSBumpScoreIfMindControlled, NodeType=Successor, Child[0]=BumpScoreIfMindControlled)
+Behaviors=(BehaviorName=BumpScoreIfMindControlled, NodeType=Sequence, Child[0]=TargetAffectedByEffect-MindControl, Child[1]=AddToTargetScore_200)

;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
; LW UNITS THAT REQUIRE NO AI CHANGES
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************

; HIVE QUEEN/CHRYSSALID SOLDIER USES THE REGULAR CHRYSSALID AI. THIS ISNT LIKELY TO CHANGE.
+Behaviors=(BehaviorName="LWHiveQueenRoot", NodeType=Selector, Child[0]="Chryssalid::CharacterRoot")

; ADVENT ARCHER MEC USES MY UNIFIED PATHWAY. THIS MIGHT CHANGE.
+Behaviors=(BehaviorName="LWAdventMECArcherRoot", NodeType=Selector, Child[0]=AdvMEC_Root)

;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
; LW UNITS
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************
;*****************************************************************************************************************************************************************************************************

;*****************************************************************************************************************************************************************************************************
; LW DRONE V1.2 25-11-2017
;*****************************************************************************************************************************************************************************************************
; New AI focuses on repairing first. If it cant repair anything, it'll annoy XCOM. The Drone is always classified as a Support unit if engaged, and a Scout if not.
; - Drones will not check for High Priority shots first, it doesnt care about flanks or kill shots. Just go through the tree normally. It might get to a shot, or it might repair a sectopod instead.
; - Drones will ignore incapacitated targets for Stun ability now.
; - Fixed MWP Movement Weight Profile, new WOTC format used.
; - Drones will score out non robotic, non allied, non wounded units during the Repair check process, just in case.
; - Drones will almost always react to Mimic Beacons.

+Behaviors=(BehaviorName=LWDroneRoot, NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=LWDroneRedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=LWDroneRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=LWDroneRedAbilitySelector)
+Behaviors=(BehaviorName=LWDroneRedAbilitySelector, NodeType=Selector, Child[0]=DroneMimicBeaconBehavior, Child[1]=LWDroneRedFirstAction, Child[2]=LWDroneRedLastAction)
+Behaviors=(BehaviorName=DroneMimicBeaconBehavior, NodeType=RandFilter, Child[0]=MimicBeaconBehavior, Param[0]=90)

+Behaviors=(BehaviorName=LWDroneRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=LWDroneRedFirstActionSelector)
+Behaviors=(BehaviorName=LWDroneRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryDroneRepair, \\
	Child[1]=TryMoveForDroneRepair, \\
	Child[2]=TryMeleeStun, \\
	Child[3]=TryMoveForDroneMeleeStun, \\
	Child[4]=HuntEnemySeeNoOne, \\
	Child[5]=TryDroneFlankingMove, \\
	Child[6]=TryDroneRegularMove)

+Behaviors=(BehaviorName=LWDroneRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=LWDroneRedLastActionSelector)
+Behaviors=(BehaviorName=LWDroneRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryDroneRepair, \\
	Child[1]=TryMeleeStun, \\
	Child[2]=ShockIfAvailable, \\
	Child[3]=HuntEnemySeeNoOne, \\
	Child[4]=TryDroneFlankingMove, \\
	Child[5]=TryDroneRegularMove) 

+Behaviors=(BehaviorName=TryDroneFlankingMove, NodeType=Sequence, Child[0]=IsMyJob-Soldier, Child[1]=IsAbilityAvailable-StandardMove, Child[2]=ResetDestinationSearch, Child[3]=RestrictToFlanking, Child[4]=SetNoCoverMovement, Child[5]=RestrictToAbilityRange-LWDroneShock, Child[6]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=TryDroneRegularMove, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=SetNoCoverMovement, Child[3]=RestrictToAbilityRange-LWDroneShock, Child[4]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=TryMeleeStun, NodeType=Sequence, Child[0]=IsAbilityAvailable-LWDroneMeleeStun, Child[1]=SelectTargetForMeleeStun, Child[2]=SelectAbility-LWDroneMeleeStun)
+Behaviors=(BehaviorName=SelectTargetForMeleeStun, NodeType=Sequence, Child[0]=SetTargetStack-LWDroneMeleeStun, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-LWDroneMeleeStun)

+Behaviors=(BehaviorName=ShockIfAvailable, NodeType=Sequence, Child[0]=IsAbilityAvailable-LWDroneShock, Child[1]=SelectTargetForShock, Child[2]=SelectAbility-LWDroneShock)
+Behaviors=(BehaviorName=SelectTargetForShock, NodeType=Sequence, Child[0]=SetTargetStack-LWDroneShock, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-LWDroneShock)

+Behaviors=(BehaviorName=TryDroneRepair, NodeType=Selector, Child[0]=DroneRepairIfAvailable)
+Behaviors=(BehaviorName=DroneRepairIfAvailable, NodeType=Sequence, Child[0]=IsAbilityAvailable-LWDroneRepair, Child[1]=SelectTargetForDroneRepair, Child[2]=SelectAbility-LWDroneRepair)

+Behaviors=(BehaviorName=TryMoveForDroneRepair, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-LWDroneRepair, Child[2]=SelectTargetForDroneRepair, Child[3]=MoveStandardIfFirstAbility-LWDroneRepair)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-LWDroneRepair, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindDroneRepairDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindDroneRepairDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToPotentialTargetRange-LWDroneRepair, Child[2]=FindRestrictedDestination-MWP_Fanatic)

+Behaviors=(BehaviorName=SelectTargetForDroneRepair, NodeType=Sequence, Child[0]=SetTargetStack-LWDroneRepair, Child[1]=SelectBestTargetForDroneRepair, Child[2]=HasValidTarget-LWDroneRepair)
+Behaviors=(BehaviorName=SelectBestTargetForDroneRepair, NodeType=RepeatUntilFail, Child[0]=EvaluateTargetsDroneRepair)
+Behaviors=(BehaviorName=EvaluateTargetsDroneRepair, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetIsRobotic, Child[2]=TargetIsAlly, Child[3]=TargetWounded, Child[4]=TargetScoreHighestSoldierRank, Child[5]=TargetScoreHealth, Child[6]=TargetScoreInvalidateCivilians, Child[7]=UpdateBestTarget)

+Behaviors=(BehaviorName=TryMoveForDroneMeleeStun, NodeType=Sequence, Child[0]=IsAbilityReady-LWDroneMeleeStun, Child[1]=SelectTargetForDroneMeleeStun, Child[2]=MoveStandardIfFirstAbility-LWDroneMeleeStun)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-LWDroneMeleeStun, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindDroneMeleeStunDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindDroneMeleeStunDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToPotentialTargetRange-LWDroneMeleeStun, Child[2]=FindRestrictedDestination-MWP_Fanatic)

+Behaviors=(BehaviorName=SelectTargetForDroneMeleeStun, NodeType=Sequence, Child[0]=SetTargetStack-LWDroneMeleeStun, Child[1]=SelectBestTargetForDroneMeleeStun, Child[2]=HasValidTarget-LWDroneMeleeStun)
+Behaviors=(BehaviorName=SelectBestTargetForDroneMeleeStun, NodeType=RepeatUntilFail, Child[0]=EvaluateTargetsDroneMeleeStun)
+Behaviors=(BehaviorName=EvaluateTargetsDroneMeleeStun, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetScoreHighestSoldierRank, Child[2]=TargetScoreHealth, Child[3]=TargetScoreInvalidateCivilians, Child[4]=ScoreOutIfIncapacitated, Child[5]=UpdateBestTarget)

+Behaviors=(BehaviorName=IsAbilityAvailable-LWDroneShock, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-LWDroneShock, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-LWDroneShock, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-LWDroneShock, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-LWDroneShock, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-LWDroneShock, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToPotentialTargetRange-LWDroneShock, NodeType=Action)

+Behaviors=(BehaviorName=IsAbilityAvailable-LWDroneMeleeStun, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-LWDroneMeleeStun, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-LWDroneMeleeStun, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-LWDroneMeleeStun, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-LWDroneMeleeStun, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-LWDroneMeleeStun, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToPotentialTargetRange-LWDroneMeleeStun, NodeType=Action)

+Behaviors=(BehaviorName=IsAbilityAvailable-LWDroneRepair, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-LWDroneRepair, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-LWDroneRepair, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-LWDroneRepair, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-LWDroneRepair, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-LWDroneRepair, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToPotentialTargetRange-LWDroneRepair, NodeType=Action)

;*****************************************************************************************************************************************************************************************************
; LW SENTRY V1.3 02-12-2017
;*****************************************************************************************************************************************************************************************************
; The Sentry doesnt need to act much differently than a Trooper now, because the Trooper is smarter and doesnt move as much.
; It can have a Flashbang grenade, so it's also already supported as Offensive Grenade.
; The Sentry perks are passive and automatic, no AI required.
; V1.2 Removed any Overwatch code checks, the Sentry will auto overwatch so just fire.
; V1.2 The Sentry will never GrenadeSingle unlike the Trooper.
; V1.3 Standalone version changes.

+Behaviors=(BehaviorName="LWAdventSentryRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=LWAdventSentry_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=LWAdventSentry_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=LWAdventSentry_RedAbilitySelector)
+Behaviors=(BehaviorName=LWAdventSentry_RedAbilitySelector, NodeType=Selector, Child[0]=AdventSentryMimicBeaconBehavior, Child[1]=LWAdventSentryRedFirstAction, Child[2]=LWAdventSentryRedLastAction)
+Behaviors=(BehaviorName=AdventSentryMimicBeaconBehavior, NodeType=RandFilter, Child[0]=MimicBeaconBehavior, Param[0]=80)

+Behaviors=(BehaviorName=LWAdventSentryRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=LWAdventSentryRedFirstActionSelector)
+Behaviors=(BehaviorName=LWAdventSentryRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TrySentryGrenadeMany25, \\
	Child[2]=ADVENTPunishFlankedEnemyFirstAction, \\
	Child[3]=NeedsReload, \\
	Child[4]=ShootIfIdeal, \\
	Child[5]=TrySentrySuppression, \\
	Child[6]=SelectMove_JobOrDefensive, \\
	Child[7]=TryToRemoveBurning, \\
	Child[8]=ADVENTHuntEnemyWithCoverSeeNoOne, \\
	Child[9]=TryShootOrReload)

+Behaviors=(BehaviorName=LWAdventSentryRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=LWAdventSentryRedLastActionSelector)
+Behaviors=(BehaviorName=LWAdventSentryRedLastActionSelector, NodeType=Selector, \\
	Child[0]=EmergencyBurnRemoval, \\
	Child[1]=TrySentryGrenadeMany25, \\
	Child[2]=ADVENTPunishFlankedEnemyLastAction, \\
	Child[3]=TryToRemoveBurning, \\
	Child[4]=NeedsReload, \\
	Child[5]=ShootIfIdeal, \\
	Child[6]=TrySentrySuppression, \\
	Child[7]=TryShootOrReload, \\
	Child[8]=TrySentryGrenadeMany, \\
	Child[9]=TrySentryGrenadeFew, \\
	Child[10]=ADVENTHuntEnemyWithCoverSeeNoOne, \\
	Child[11]=TryOverwatch, \\
	Child[12]=DoCower)

; Sentry grenades sometimes, not always. 25% over two actions provides a total of about 33% per round.
+Behaviors=(BehaviorName=TrySentryGrenadeMany25, NodeType=RandFilter, Child[0]=TrySentryGrenadeMany, Param[0]=25)

; Sentry Suppression.
+Behaviors=(BehaviorName=TrySentrySuppression, NodeType=Selector, Child[0]=TrySentrySuppressionSupported, Child[1]=TrySentrySuppressClosest)
+Behaviors=(BehaviorName=TrySentrySuppressClosest, NodeType=Sequence, Child[0]=SentrySuppressionCondition, Child[1]=SentryDoSuppression)
+Behaviors=(BehaviorName=SentryDoSuppression, NodeType=Sequence, Child[0]=IsAbilityAvailable-Suppression, Child[1]=SelectTargetForSuppression, Child[2]=SelectAbility-Suppression)
+Behaviors=(BehaviorName=SentrySuppressionCondition, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MultipleEnemiesVisible, Child[2]=SentryOneOrMoreOverwatchingTeammates, Child[3]=SuppressIdealChanceFilter)
+Behaviors=(BehaviorName=SentryOneOrMoreOverwatchingTeammates, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]=">=", Param[2]="1", Param[3]="1")
+Behaviors=(BehaviorName=TrySentrySuppressionSupported, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MultipleEnemiesVisible, Child[2]=SentryRandomSuppression)
+Behaviors=(BehaviorName=SentryRandomSuppression, NodeType=RandFilter, Child[0]=SentryDoSuppression, Param[0]=15)
; Grenading. Single grenading less often than muton, but slightly more with Dark Event.
+Behaviors=(BehaviorName=TrySentryGrenadeMany, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=FindPotentialAoETargets-SentryGrenadeManyProfile, Child[2]=SelectAoETarget-SentryGrenadeManyProfile, Child[3]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=TrySentryGrenadeFew, NodeType=Sequence, Child[0]=IsAdvSentryQualifiedForGrenade, Child[1]=SentrySingleGrenadeCheck, Child[2]=FindPotentialAoETargets-SentryGrenadeFewProfile, Child[3]=SelectAoETarget-SentryGrenadeFewProfile, Child[4]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=SentrySingleGrenadeCheck, NodeType=Selector, Child[0]=CheckDarkEventSentry, Child[1]=SentryGrenadeSingleRegular)
+Behaviors=(BehaviorName=CheckDarkEventSentry, NodeType=Sequence, Child[0]=DarkEventActive-DarkEvent_CollateralDamage, Child[1]=SentryGrenadeSingleCollateralFilter)
+Behaviors=(BehaviorName=SentryGrenadeSingleRegular, NodeType=RandFilter, Child[0]=IsAbilityAvailable-ThrowGrenade, Param[0]=10)
+Behaviors=(BehaviorName=SentryGrenadeSingleCollateralFilter, NodeType=RandFilter, Child[0]=IsAbilityAvailable-ThrowGrenade, Param[0]=25)
; SentryM1 can't grenade few below Classic difficulty.
+Behaviors=(BehaviorName=IsAdvSentryQualifiedForGrenade, NodeType=Selector, Child[0]=IsDifficultyAboveNormal, Child[1]=NotAdvSentryM1)
+Behaviors=(BehaviorName=NotAdvSentryM1, NodeType=Inverter, Child[0]=TemplateNameIs-AdvSentryM1)
+Behaviors=(BehaviorName=TemplateNameIs-AdvSentryM1, NodeType=Condition)

+Behaviors=(BehaviorName=FindPotentialAoETargets-SentryGrenadeFewProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-SentryGrenadeManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-SentryGrenadeFewProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-SentryGrenadeManyProfile, NodeType=Action)

;*****************************************************************************************************************************************************************************************************
; LW GRENADIER V1.3 26-11-2017
;*****************************************************************************************************************************************************************************************************
; The grenadier was simply adapted from my old LW2 code.
; Grenadier M1 have higher target requirement due to the use of Flashbangs.
; V1.1 The grenadier will not punish flanks as a first action often, he has other shit to check first so make him move more than shoot flankees.
; V1.2 GrenadierM1 cannot single grenade below Classic difficulty.
; V1.3 Flank punish when cant grenade increased.
+Behaviors=(BehaviorName="LWAdventGrenadierRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=LWAdventGrenadierRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=LWAdventGrenadierRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=LWAdventGrenadier_RedAbilitySelector)
+Behaviors=(BehaviorName=LWAdventGrenadier_RedAbilitySelector, NodeType=Selector, Child[0]=AdventGrenadierMimicBeaconBehavior, Child[1]=LWAdventGrenadierRedFirstAction, Child[2]=LWAdventGrenadierRedLastAction)
+Behaviors=(BehaviorName=AdventGrenadierMimicBeaconBehavior, NodeType=RandFilter, Child[0]=MimicBeaconBehavior, Param[0]=80)

+Behaviors=(BehaviorName=LWAdventGrenadierRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=LWAdventGrenadierRedFirstActionSelector)
+Behaviors=(BehaviorName=LWAdventGrenadierRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryGrenadeLauncherLots, \\
	Child[2]=NeedsReload, \\
    Child[3]=GrenadierPunishSometimes, \\
	Child[4]=GrenadeExpendedPunishNormally, \\
	Child[5]=TryGrenadierSuppression, \\
	Child[6]=SelectMove_JobOrDefensive, \\
	Child[7]=TryTwoTurnAttackSupportIfSafe, \\
    Child[8]=TryGrenadeLauncherFew, \\
	Child[9]=TryToRemoveBurning, \\
	Child[10]=ADVENTHuntEnemyWithCoverSeeNoOne, \\
	Child[11]=TryShootOrReload)

; Punish rarely if you are grenade loaded.
+Behaviors=(BehaviorName=GrenadierPunishSometimes, NodeType=RandFilter, Child[0]=ADVENTPunishFlankedEnemyFirstAction, Param[0]=25)
; If you can't grenade, punish normally.
+Behaviors=(BehaviorName=GrenadeExpendedPunishNormally, NodeType=Sequence, Child[0]=GrenadierCheckGrenadeNotAvailable, Child[1]=ADVENTPunishFlankedEnemyFirstAction)
+Behaviors=(BehaviorName=GrenadierCheckGrenadeNotAvailable, NodeType=Inverter, Child[0]=IsAbilityAvailable-ThrowGrenade)

+Behaviors=(BehaviorName=LWAdventGrenadierRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=LWAdventGrenadierRedLastActionSelector)
+Behaviors=(BehaviorName=LWAdventGrenadierRedLastActionSelector, NodeType=Selector, \\
	Child[0]=EmergencyBurnRemoval, \\
	Child[1]=TryGrenadeLauncherLots, \\
	Child[2]=ADVENTPunishFlankedEnemyLastAction, \\
	Child[3]=TryToRemoveBurning, \\
	Child[4]=NeedsReload, \\
	Child[5]=TryGrenadierSuppression, \\
    Child[6]=ShootIfIdeal, \\
	Child[7]=TryGrenadeLauncherFew, \\
	Child[8]=NeedsReload, \\
	Child[9]=ShootIfIdeal, \\
	Child[10]=TryTwoTurnAttackSupportIfSafe, \\
	Child[11]=ADVENTHuntEnemyWithCoverSeeNoOne, \\
	Child[12]=TryShootOrReloadOrOverwatch, \\
	Child[13]=TryOverwatch, \\
	Child[14]=DoCower)

; Grenadier Suppression.
+Behaviors=(BehaviorName=TryGrenadierSuppression, NodeType=Selector, Child[0]=TryGrenadierSuppressionSupported, Child[1]=TryGrenadierSuppressClosest)
+Behaviors=(BehaviorName=TryGrenadierSuppressClosest, NodeType=Sequence, Child[0]=GrenadierSuppressionCondition, Child[1]=GrenadierDoSuppression)
+Behaviors=(BehaviorName=GrenadierDoSuppression, NodeType=Sequence, Child[0]=IsAbilityAvailable-Suppression, Child[1]=SelectTargetForSuppression, Child[2]=SelectAbility-Suppression)
+Behaviors=(BehaviorName=GrenadierSuppressionCondition, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MultipleEnemiesVisible, Child[2]=GrenadierOneOrMoreOverwatchingTeammates, Child[3]=SuppressIdealChanceFilter)
+Behaviors=(BehaviorName=GrenadierOneOrMoreOverwatchingTeammates, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]=">=", Param[2]="1", Param[3]="1")
+Behaviors=(BehaviorName=TryGrenadierSuppressionSupported, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MultipleEnemiesVisible, Child[2]=GrenadierRandomSuppression)
+Behaviors=(BehaviorName=GrenadierRandomSuppression, NodeType=RandFilter, Child[0]=GrenadierDoSuppression, Param[0]=10)

; Grenadier M1 has a massive range and AOE grenade (flashbang in a grenade launcher with bonus). He has special AOE parameters with a higher minimum (2/3 instead of 1/2) because he can catch more enemies.
+Behaviors=(BehaviorName=NotGrenadierM1, NodeType=Inverter, Child[0]=TemplateNameIs-AdvGrenadierM1)
+Behaviors=(BehaviorName=TemplateNameIs-AdvGrenadierM1, NodeType=Condition)

+Behaviors=(BehaviorName=TryGrenadeLauncherLots, NodeType=Selector, Child[0]=TryGrenadeLauncherM1, Child[1]=TryGrenadeLauncherM2M3)
+Behaviors=(BehaviorName=TryGrenadeLauncherFew, NodeType=Selector, Child[0]=TryGrenadeLauncherM1MinimumTwo, Child[1]=TryGrenadeLauncherMinimumOneM2M3)
; GrenadierM1 has a lot more area for his grenades, so the target numbers are higher than other grenadiers. He needs 3 for a valid flashbang regular, and 2 in easier mode.
+Behaviors=(BehaviorName=TryGrenadeLauncherM1, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=TemplateNameIs-AdvGrenadierM1, Child[2]=IsAbilityAvailable-LaunchGrenade, Child[3]=FindPotentialAoETargets-GrenadeLauncherM1ThreeOrMoreProfile, Child[4]=SelectAoETarget-GrenadeLauncherM1ThreeOrMoreProfile, Child[5]=SelectAbility-LaunchGrenade)
+Behaviors=(BehaviorName=TryGrenadeLauncherM1MinimumTwo, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=TemplateNameIs-AdvGrenadierM1, Child[2]=IsAbilityAvailable-LaunchGrenade, Child[3]=FindPotentialAoETargets-GrenadeLauncherM1MinimumTwoProfile, Child[4]=SelectAoETarget-GrenadeLauncherM1MinimumTwoProfile, Child[5]=SelectAbility-LaunchGrenade)
+Behaviors=(BehaviorName=TryGrenadeLauncherM2M3, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=NotGrenadierM1, Child[2]=IsAbilityAvailable-LaunchGrenade, Child[3]=FindPotentialAoETargets-GrenadeLauncherProfile, Child[4]=SelectAoETarget-GrenadeLauncherProfile, Child[5]=SelectAbility-LaunchGrenade)
+Behaviors=(BehaviorName=TryGrenadeLauncherMinimumOneM2M3, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=NotGrenadierM1, Child[2]=IsDifficultyAboveNormal, Child[3]=IsAbilityAvailable-LaunchGrenade, Child[4]=FindPotentialAoETargets-GrenadeLauncherOneOrMoreProfile, Child[5]=SelectAoETarget-GrenadeLauncherOneOrMoreProfile, Child[6]=SelectAbility-LaunchGrenade)

+Behaviors=(BehaviorName=IsAbilityAvailable-LaunchGrenade, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-LaunchGrenade, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-LaunchGrenade, NodeType=Action)

+Behaviors=(BehaviorName=FindPotentialAoETargets-GrenadeLauncherProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-GrenadeLauncherOneOrMoreProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-GrenadeLauncherM1ThreeOrMoreProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-GrenadeLauncherM1MinimumTwoProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GrenadeLauncherProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GrenadeLauncherOneOrMoreProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GrenadeLauncherM1ThreeOrMoreProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GrenadeLauncherM1MinimumTwoProfile, NodeType=Action)

;*****************************************************************************************************************************************************************************************************
; LW ROCKETEER V1.1 26-11-2017
;*****************************************************************************************************************************************************************************************************
; Rocketeer supports offensive grenades.
; Rocketeer supports single-target rockets under certain conditions. RocketeerM1 can't single rocket. Same for grenades.
; Rocketeers will punish flanking rarely its not their job, delivering payload takes precedence.
; V1.1 Always punish if your payload is gone (No grenade, no rocket means unshackled).

+Behaviors=(BehaviorName="LWAdventRocketeerRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=LWAdventRocketeer_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=LWAdventRocketeer_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=LWAdventRocketeer_RedAbilitySelector)
+Behaviors=(BehaviorName=LWAdventRocketeer_RedAbilitySelector, NodeType=Selector, Child[0]=AdventRocketeerMimicBeaconBehavior, Child[1]=LWAdventRocketeerRedFirstAction, Child[2]=LWAdventRocketeerRedLastAction)
+Behaviors=(BehaviorName=AdventRocketeerMimicBeaconBehavior, NodeType=RandFilter, Child[0]=MimicBeaconBehavior, Param[0]=80)

+Behaviors=(BehaviorName=LWAdventRocketeerRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=LWAdventRocketeerRedFirstActionSelector)
+Behaviors=(BehaviorName=LWAdventRocketeerRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryRocketLauncherMasses, \\
	Child[2]=TryRocketeerGrenadeMany, \\
	Child[3]=TryToRemoveBurning, \\
	Child[4]=RocketeerPunishSometimes, \\
	Child[5]=GrenadeRocketExpendedPunishNormally, \\
	Child[6]=ADVENTHuntEnemyWithCoverSeeNoOne, \\
    Child[7]=SelectMove_JobOrDefensive, \\
	Child[8]=TryRocketLauncherMany, \\
	Child[9]=TryRocketeerGrenadeSingle, \\
	Child[10]=TryRocketLauncherFew, \\
	Child[11]=TryTwoTurnAttackSupportIfSafe, \\
	Child[12]=TryShootOrReload)

+Behaviors=(BehaviorName=LWAdventRocketeerRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=LWAdventRocketeerRedLastActionSelector)
+Behaviors=(BehaviorName=LWAdventRocketeerRedLastActionSelector, NodeType=Selector, \\
	Child[0]=EmergencyBurnRemoval, \\
	Child[1]=TryRocketLauncherMany, \\
	Child[2]=TryRocketeerGrenadeMany, \\
	Child[3]=TryToRemoveBurning, \\
	Child[4]=TryRocketLauncherFew, \\
	Child[5]=ADVENTHuntEnemyWithCoverSeeNoOne, \\
	Child[6]=NeedsReload, \\
	Child[7]=ShootIfIdeal, \\
	Child[8]=TryTwoTurnAttackSupportIfSafe, \\
	Child[9]=TryShootOrReloadOrOverwatch, \\
	Child[10]=TryOverwatch, \\
	Child[11]=DoCower)

; If you are loaded, punish flank rarely.
+Behaviors=(BehaviorName=RocketeerPunishSometimes, NodeType=RandFilter, Child[0]=ADVENTPunishFlankedEnemyFirstAction, Param[0]=25)
; If you cant use grenades or rockets, or they are expended, just punish flanks normally.
+Behaviors=(BehaviorName=GrenadeRocketExpendedPunishNormally, NodeType=Sequence, Child[0]=RocketeerCheckRocketNotAvailable, Child[1]=RocketeerCheckGrenadeNotAvailable, Child[2]=ADVENTPunishFlankedEnemyFirstAction)
+Behaviors=(BehaviorName=RocketeerCheckRocketNotAvailable, NodeType=Inverter, Child[0]=IsAbilityAvailable-RocketLauncher)
+Behaviors=(BehaviorName=RocketeerCheckGrenadeNotAvailable, NodeType=Inverter, Child[0]=IsAbilityAvailable-ThrowGrenade)

; 4 Targets minimum.
+Behaviors=(BehaviorName=TryRocketLauncherMasses, NodeType=Sequence, Child[0]=IsAbilityAvailable-RocketLauncher, Child[1]=FindPotentialAoETargets-RocketLauncherMassesProfile, Child[2]=SelectAoETarget-RocketLauncherMassesProfile, Child[3]=SelectAbility-RocketLauncher)
; 3 Targets minimum.
+Behaviors=(BehaviorName=TryRocketLauncherMany, NodeType=Sequence, Child[0]=IsAbilityAvailable-RocketLauncher, Child[1]=FindPotentialAoETargets-RocketLauncherManyProfile, Child[2]=SelectAoETarget-RocketLauncherManyProfile, Child[3]=SelectAbility-RocketLauncher)
; 2 Targets minimum.
+Behaviors=(BehaviorName=TryRocketLauncherFew, NodeType=Sequence, Child[0]=IsAbilityAvailable-RocketLauncher, Child[1]=FindPotentialAoETargets-RocketLauncherFewProfile, Child[2]=SelectAoETarget-RocketLauncherFewProfile, Child[3]=SelectAbility-RocketLauncher)
; Single target on Classic+ difficulty, or if damaged.
+Behaviors=(BehaviorName=TryRocketLauncherSingle, NodeType=Sequence, Child[0]=RocketeerSingleRocketCondition, Child[1]=IsAbilityAvailable-RocketLauncher, Child[2]=FindPotentialAoETargets-RocketLauncherSingleProfile, Child[3]=SelectAoETarget-RocketLauncherSingleProfile, Child[4]=SelectAbility-RocketLauncher)
+Behaviors=(BehaviorName=RocketeerSingleRocketCondition, NodeType=Selector, Child[0]=IsAdvRocketeerQualifiedForRocket, Child[1]=RocketeerNotM1AndIsBloodied)
+Behaviors=(BehaviorName=RocketeerNotM1AndIsBloodied, NodeType=Sequence, Child[0]=IsBloodied, Child[1]=NotAdvRocketeerM1)

+Behaviors=(BehaviorName=IsAbilityAvailable-RocketLauncher, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RocketLauncher, NodeType=Action)

+Behaviors=(BehaviorName=FindPotentialAoETargets-RocketLauncherMassesProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RocketLauncherMassesProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-RocketLauncherManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RocketLauncherManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-RocketLauncherFewProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RocketLauncherFewProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-RocketLauncherSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RocketLauncherSingleProfile, NodeType=Action)

+Behaviors=(BehaviorName=FindPotentialAoETargets-RocketeerGrenadeSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-RocketeerGrenadeManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RocketeerGrenadeSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-RocketeerGrenadeManyProfile, NodeType=Action)

; Grenading. Single grenading less often than muton, but slightly more with Dark Event.
+Behaviors=(BehaviorName=TryRocketeerGrenadeMany, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=FindPotentialAoETargets-RocketeerGrenadeManyProfile, Child[2]=SelectAoETarget-RocketeerGrenadeManyProfile, Child[3]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=TryRocketeerGrenadeSingle, NodeType=Sequence, Child[0]=IsAdvRocketeerQualifiedForGrenade, Child[1]=RocketeerSingleGrenadeCheck, Child[2]=FindPotentialAoETargets-RocketeerGrenadeSingleProfile, Child[3]=SelectAoETarget-RocketeerGrenadeSingleProfile, Child[4]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=RocketeerSingleGrenadeCheck, NodeType=Selector, Child[0]=CheckDarkEventRocketeer, Child[1]=RocketeerGrenadeSingleRegular)
+Behaviors=(BehaviorName=CheckDarkEventRocketeer, NodeType=Sequence, Child[0]=DarkEventActive-DarkEvent_CollateralDamage, Child[1]=RocketeerGrenadeSingleCollateralFilter)
+Behaviors=(BehaviorName=RocketeerGrenadeSingleRegular, NodeType=RandFilter, Child[0]=IsAbilityAvailable-ThrowGrenade, Param[0]=10)
+Behaviors=(BehaviorName=RocketeerGrenadeSingleCollateralFilter, NodeType=RandFilter, Child[0]=IsAbilityAvailable-ThrowGrenade, Param[0]=25)
; Rocketeer can't grenade single below Classic difficulty.
+Behaviors=(BehaviorName=IsAdvRocketeerQualifiedForGrenade, NodeType=Selector, Child[0]=IsDifficultyAboveNormal, Child[1]=NotAdvRocketeerM1)
+Behaviors=(BehaviorName=IsAdvRocketeerQualifiedForRocket, NodeType=Selector, Child[0]=IsDifficultyAboveNormal, Child[1]=NotAdvRocketeerM1)
+Behaviors=(BehaviorName=NotAdvRocketeerM1, NodeType=Inverter, Child[0]=TemplateNameIs-AdvRocketeerM1)
+Behaviors=(BehaviorName=TemplateNameIs-AdvRocketeerM1, NodeType=Condition)

;*****************************************************************************************************************************************************************************************************
; LW GUNNER V1.0 26-11-2017
;*****************************************************************************************************************************************************************************************************
; Increased Suppression chance compared to other units when supported.
; Supports offensive grenades.

+Behaviors=(BehaviorName="LWAdventGunnerRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=LWAdventGunnerRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=LWAdventGunnerRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=LWAdventGunner_RedAbilitySelector)
+Behaviors=(BehaviorName=LWAdventGunner_RedAbilitySelector, NodeType=Selector, Child[0]=AdventGunnerMimicBeaconBehavior, Child[1]=LWAdventGunnerRedFirstAction, Child[2]=LWAdventGunnerRedLastAction)
+Behaviors=(BehaviorName=AdventGunnerMimicBeaconBehavior, NodeType=RandFilter, Child[0]=MimicBeaconBehavior, Param[0]=80)

+Behaviors=(BehaviorName=LWAdventGunnerRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=LWAdventGunnerRedFirstActionSelector)
+Behaviors=(BehaviorName=LWAdventGunnerRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryTraverseFire, \\
	Child[2]=ADVENTPunishFlankedEnemyFirstAction, \\
	Child[3]=TryToRemoveBurning, \\
	Child[4]=TryGunnerGrenadeMany, \\
	Child[5]=TryGunnerAreaSuppression, \\
	Child[6]=ADVENTHuntEnemyWithCoverSeeNoOne, \\
    Child[7]=SelectMove_JobOrDefensive, \\
	Child[8]=TryShootOrReload)

+Behaviors=(BehaviorName=LWAdventGunnerRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=LWAdventGunnerRedLastActionSelector)
+Behaviors=(BehaviorName=LWAdventGunnerRedLastActionSelector, NodeType=Selector, \\
	Child[0]=EmergencyBurnRemoval, \\
	Child[1]=ADVENTPunishFlankedEnemyLastAction, \\
	Child[2]=TryGunnerGrenadeMany, \\
	Child[3]=TryToRemoveBurning, \\
	Child[4]=NeedsReload, \\
    Child[5]=ShootIfIdeal, \\
	Child[6]=TryGunnerAreaSuppression, \\
	Child[7]=ADVENTHuntEnemyWithCoverSeeNoOne, \\
	Child[8]=TryTwoTurnAttackSupportIfSafe, \\
	Child[9]=TryShootOrReloadOrOverwatch, \\
	Child[10]=TryGunnerGrenadeSingle, \\
	Child[11]=TryOverwatch, \\
	Child[12]=DoCower)

+Behaviors=(BehaviorName=TryTraverseFire, NodeType=Sequence, Child[0]=IsAbilityAvailable-TraverseFire, Child[1]=TryShootOrReload)

; Gunner Suppression.
+Behaviors=(BehaviorName=TryGunnerAreaSuppression, NodeType=Selector, Child[0]=TryGunnerAreaSuppressionSupported, Child[1]=TryGunnerSuppressByAim)
+Behaviors=(BehaviorName=TryGunnerSuppressByAim, NodeType=Sequence, Child[0]=GunnerAreaSuppressionCondition, Child[1]=GunnerDoAreaSuppression)
+Behaviors=(BehaviorName=GunnerDoAreaSuppression, NodeType=Sequence, Child[0]=IsAbilityAvailable-AreaSuppression, Child[1]=SelectTargetForAreaSuppressionByAim, Child[2]=SelectAbility-AreaSuppression)
+Behaviors=(BehaviorName=SelectTargetForAreaSuppressionByAim, NodeType=Sequence, Child[0]=SetTargetStack-AreaSuppression, Child[1]=SelectBestSuppressionTargetByAim, Child[2]=HasValidTarget-AreaSuppression)
+Behaviors=(BehaviorName=GunnerAreaSuppressionCondition, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MultipleEnemiesVisible, Child[2]=GunnerOneOrMoreOverwatchingTeammates, Child[3]=SuppressGunnerIdealChanceFilter)
+Behaviors=(BehaviorName=GunnerOneOrMoreOverwatchingTeammates, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]=">=", Param[2]="1", Param[3]="1")
+Behaviors=(BehaviorName=TryGunnerAreaSuppressionSupported, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MultipleEnemiesVisible, Child[2]=GunnerRandomAreaSuppression)
+Behaviors=(BehaviorName=GunnerRandomAreaSuppression, NodeType=RandFilter, Child[0]=GunnerDoAreaSuppression, Param[0]=25)

+Behaviors=(BehaviorName=IsAbilityAvailable-TraverseFire, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-AreaSuppression, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-AreaSuppression, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AreaSuppression, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-AreaSuppression, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-AreaSuppression, NodeType=Action)

+Behaviors=(BehaviorName=TryGunnerGrenadeMany, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=FindPotentialAoETargets-GunnerGrenadeManyProfile, Child[2]=SelectAoETarget-GunnerGrenadeManyProfile, Child[3]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=TryGunnerGrenadeSingle, NodeType=Sequence, Child[0]=IsAdvGunnerQualifiedForGrenade, Child[1]=GunnerSingleGrenadeCheck, Child[2]=FindPotentialAoETargets-GunnerGrenadeSingleProfile, Child[3]=SelectAoETarget-GunnerGrenadeSingleProfile, Child[4]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=GunnerSingleGrenadeCheck, NodeType=Selector, Child[0]=CheckDarkEventGunner, Child[1]=GunnerGrenadeSingleRegular)
+Behaviors=(BehaviorName=CheckDarkEventGunner, NodeType=Sequence, Child[0]=DarkEventActive-DarkEvent_CollateralDamage, Child[1]=GunnerGrenadeSingleCollateralFilter)
+Behaviors=(BehaviorName=GunnerGrenadeSingleRegular, NodeType=RandFilter, Child[0]=IsAbilityAvailable-ThrowGrenade, Param[0]=10)
+Behaviors=(BehaviorName=GunnerGrenadeSingleCollateralFilter, NodeType=RandFilter, Child[0]=IsAbilityAvailable-ThrowGrenade, Param[0]=25)

; Gunner can't grenade single below Classic difficulty.
+Behaviors=(BehaviorName=IsAdvGunnerQualifiedForGrenade, NodeType=Selector, Child[0]=IsDifficultyAboveNormal, Child[1]=NotAdvGunnerM1)
+Behaviors=(BehaviorName=IsAdvGunnerQualifiedForRocket, NodeType=Selector, Child[0]=IsDifficultyAboveNormal, Child[1]=NotAdvGunnerM1)
+Behaviors=(BehaviorName=NotAdvGunnerM1, NodeType=Inverter, Child[0]=TemplateNameIs-AdvGunnerM1)
+Behaviors=(BehaviorName=TemplateNameIs-AdvGunnerM1, NodeType=Condition)

+Behaviors=(BehaviorName=FindPotentialAoETargets-GunnerGrenadeSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-GunnerGrenadeManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GunnerGrenadeSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-GunnerGrenadeManyProfile, NodeType=Action)

;*****************************************************************************************************************************************************************************************************
; LW SECTOID COMMANDER M2 V1.1 26-11-2017
;*****************************************************************************************************************************************************************************************************
; Based on my Sectoid, with abilities upgraded to Mass versions.
; Mimic Beacon behavior chance is massively reduced, Sectoid Commanders do not care at all.
; V1.1 Support PsiMindControl, the regular enemy version, in case you want to give it to him.

+Behaviors=(BehaviorName="SectoidM2_LWRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=SectoidM2_LWRedAlert, Child[3]=SectoidM2_LWNoEnemySightedMove)
+Behaviors=(BehaviorName=SectoidM2_LWRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=SectoidM2_LWRedAbilitySelector)
+Behaviors=(BehaviorName=SectoidM2_LWRedAbilitySelector, NodeType=Selector, Child[0]=SectoidM2MimicBeaconBehavior, Child[1]=SectoidM2_LWRedFirstAction, Child[2]=SectoidM2_LWRedLastAction)
+Behaviors=(BehaviorName=SectoidM2MimicBeaconBehavior, NodeType=RandFilter, Child[0]=MimicBeaconBehavior, Param[0]=20)

+Behaviors=(BehaviorName=SectoidM2_LWRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=SectoidM2_LWRedFirstActionSelector)
+Behaviors=(BehaviorName=SectoidM2_LWRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=ALIENPunishFlankedEnemyFirstAction, \\
	Child[2]=TrySectoidM2PsiReanimation67, \\
	Child[3]=NeedsReload, \\
	Child[4]=ShootIfIdeal, \\
	Child[5]=TrySectoidM2MindSpin50, \\
	Child[6]=TrySectoidM2Movement50, \\
	Child[7]=TryPsiMindControl, \\
	Child[8]=CounterSuppressionWithM2Psionics, \\
	Child[9]=TryShootOrReload, \\
	Child[10]=SelectMove_JobOrDefensive, \\
	Child[11]=HuntEnemyWithCoverSeeNoOne)

+Behaviors=(BehaviorName=SectoidM2_LWRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=SectoidM2_LWRedLastActionSelector)
+Behaviors=(BehaviorName=SectoidM2_LWRedLastActionSelector, NodeType=Selector, \\
	Child[0]=BOTEEmergencyBurnRemoval, \\
	Child[1]=MassRaiseUndeadIfNoEnemiesVisible, \\
	Child[2]=TryToCleanseBurning, \\
	Child[3]=ShootIfIdeal, \\
	Child[4]=TryPsiMindControl, \\
	Child[5]=TryMassPsiReanimationRandom, \\
	Child[6]=TryMassMindSpinRandom, \\
	Child[7]=NeedsReload, \\
	Child[8]=CounterSuppressionWithM2Psionics, \\
	Child[9]=TryTwoTurnAttackSupportIfSafe, \\
	Child[10]=TryShootOrReloadOrOverwatch, \\
	Child[11]=HuntEnemyWithCoverSeeNoOne, \\
	Child[12]=TrySectoidM2PsionicPower, \\
	Child[13]=TryOverwatch, \\
	Child[14]=DoCower)

+Behaviors=(BehaviorName=SectoidM2VisibleSuppressors, NodeType=Inverter, Child[0]=NoVisibleSuppressors)
+Behaviors=(BehaviorName=CounterSuppressionWithM2Psionics, NodeType=Sequence, Child[0]=SectoidM2VisibleSuppressors, Child[1]=TrySectoidM2PsionicPower)
+Behaviors=(BehaviorName=TrySectoidM2PsionicPower, NodeType=RandSelector, Child[0]=TryMassPsiReanimation, Param[0]=60, Child[1]=TryMassMindSpin, Param[1]=40)
+Behaviors=(BehaviorName=TrySectoidM2Movement50, NodeType=RandFilter, Child[0]=SelectMove_JobOrDefensive, Param[0]=50)

; Yellow Alert
+Behaviors=(BehaviorName=SectoidM2_LWNoEnemySightedMove, NodeType=Selector, Child[0]=GenericOrangeMovement, Child[1]=SectoidM2_LWYellowAlert, Child[2]=GenericGreenMovement)
+Behaviors=(BehaviorName=SectoidM2_LWYellowAlert, NodeType=Sequence, Child[0]=IsYellowAlert, Child[1]=SectoidM2_LWYellowAbilitySelector)
+Behaviors=(BehaviorName=SectoidM2_LWYellowAbilitySelector, NodeType=Selector, Child[0]=TryMassPsiReanimation, Child[1]=GenericAlertHandler)

; Mass Mind Spin
+Behaviors=(BehaviorName=TryMassMindspin, NodeType=Selector, Child[0]=TryMassMindspinMany, Child[1]=TryMassMindspinFew)
+Behaviors=(BehaviorName=TryMassMindspinMany, NodeType=Sequence, Child[0]=IsAbilityAvailable-MassMindspin, Child[1]=FindPotentialAoETargets-MassMindspinManyProfile, Child[2]=SelectAoETarget-MassMindspinManyProfile,  Child[3]=SelectAbility-MassMindspin)
+Behaviors=(BehaviorName=TryMassMindspinFew, NodeType=Sequence, Child[0]=IsAbilityAvailable-MassMindspin, Child[1]=FindPotentialAoETargets-MassMindspinFewProfile, Child[2]=SelectAoETarget-MassMindspinFewProfile,  Child[3]=SelectAbility-MassMindspin)
+Behaviors=(BehaviorName=TryMassMindSpinRandom, NodeType=RandFilter, Child[0]=TryMassMindSpin, Param[0]=50)
+Behaviors=(BehaviorName=TrySectoidM2MindSpin50, NodeType=RandFilter, Child[0]=TryMassMindSpin, Param[0]=33)

; Mass Reanimation
+Behaviors=(BehaviorName=TryMassPsiReanimation, NodeType=Selector, Child[0]=TryMassPsiReanimation_LWMany, Child[1]=TryMassPsiReanimation_LWFew)
+Behaviors=(BehaviorName=TryMassPsiReanimation_LWMany, NodeType=Sequence, Child[0]=IsAbilityAvailable-MassReanimation_LW, Child[1]=FindPotentialAoETargets-MassReanimation_LWManyProfile, Child[2]=SelectAoETarget-MassReanimation_LWManyProfile,  Child[3]=SelectAbility-MassReanimation_LW)
+Behaviors=(BehaviorName=TryMassPsiReanimation_LWFew, NodeType=Sequence, Child[0]=IsAbilityAvailable-MassReanimation_LW, Child[1]=FindPotentialAoETargets-MassReanimation_LWFewProfile, Child[2]=SelectAoETarget-MassReanimation_LWFewProfile,  Child[3]=SelectAbility-MassReanimation_LW)
+Behaviors=(BehaviorName=TryMassPsiReanimationRandom, NodeType=RandFilter, Child[0]=TryMassPsiReanimation, Param[0]=50)
+Behaviors=(BehaviorName=TrySectoidM2PsiReanimation67, NodeType=RandFilter, Child[0]=TryMassPsiReanimation, Param[0]=67)
+Behaviors=(BehaviorName=MassRaiseUndeadIfNoEnemiesVisible, NodeType=Sequence, Child[0]=NoVisibleEnemies, Child[1]=TryMassPsiReanimation)

+Behaviors=(BehaviorName=IsAbilityAvailable-MassReanimation_LW, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-MassReanimation_LW, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-MassReanimation_LW, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-MassReanimation_LW, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-MassReanimation_LW, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-MassReanimation_LW, NodeType=Action)

+Behaviors=(BehaviorName=FindPotentialAoETargets-MassReanimation_LWManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-MassReanimation_LWFewProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-MassMindspinManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-MassMindspinFewProfile, NodeType=Action)

+Behaviors=(BehaviorName=SelectAoETarget-MassReanimation_LWManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-MassReanimation_LWFewProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-MassMindspinManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-MassMindspinFewProfile, NodeType=Action)

+Behaviors=(BehaviorName=IsAbilityAvailable-MassMindspin, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-MassMindspin, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-MassMindspin, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-MassMindspin, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-MassMindspin, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-MassMindspin, NodeType=Action)

;*****************************************************************************************************************************************************************************************************
; LW SIDEWINDER V1.0 26-11-2017
;*****************************************************************************************************************************************************************************************************
; Sidewinder is a variant of the Viper AI. It enjoys using it's gun more than it's abilities.
; Sidewinders will not use suppression if available.
; If you don't want Sidewinders to Spit or TonguePull, you just remove the ability and it's going to skip them.
+Behaviors=(BehaviorName="LWSidewinderRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=ViperRedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="LWSidewinderHitAndRunRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=LWSidewinderRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=LWSidewinderRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=LWSidewinderRedAbilitySelector)
+Behaviors=(BehaviorName=LWSidewinderRedAbilitySelector, NodeType=Selector, Child[0]=ViperMimicBeaconBehavior, Child[1]=LWSidewinderRedFirstAction, Child[2]=LWSidewinderRedLastAction)
+Behaviors=(BehaviorName=ViperMimicBeaconBehavior, NodeType=RandFilter, Child[0]=MimicBeaconBehavior, Param[0]=80)

+Behaviors=(BehaviorName=LWSidewinderRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=LWSidewinderRedFirstActionSelector)
+Behaviors=(BehaviorName=LWSidewinderRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryBindPriorityLoneTarget, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=ViperPunishFlanked75, \\
	Child[3]=TryBindRarely, \\
	Child[4]=NeedsReload, \\
	Child[5]=SelectMove_JobOrFlanking, \\
	Child[6]=TryPoisonSpit, \\
	Child[7]=TryGetOverHere, \\
	Child[8]=TryShootOrReload, \\
	Child[9]=TryPoisonSpitSingleIfDamaged, \\
	Child[10]=HuntEnemyWithCoverSeeNoOne)

+Behaviors=(BehaviorName=LWSidewinderRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=LWSidewinderRedLastActionSelector)
+Behaviors=(BehaviorName=LWSidewinderRedLastActionSelector, NodeType=Selector, \\
	Child[0]=StandardMeleeAttack, \\
	Child[1]=BOTEEmergencyBurnRemoval, \\
	Child[2]=ViperPunishFlanked, \\
	Child[3]=TryToCleanseBurning, \\
	Child[4]=NeedsReload, \\
	Child[5]=ShootIfIdeal, \\
	Child[6]=TryPoisonSpit, \\
	Child[7]=TryPoisonSpitSingleIfDamaged, \\
	Child[8]=TryTwoTurnAttackSupportIfSafe, \\
	Child[9]=TryShootOrReloadOrOverwatch, \\
	Child[10]=TryPoisonSpitSingle, \\
	Child[11]=HuntEnemyWithCoverSeeNoOne, \\
	Child[12]=SidewinderFreeMovementRetreat, \\
	Child[13]=TryOverwatch, \\
	Child[14]=DoCower)

+Behaviors=(BehaviorName=TryBindRarely, NodeType=RandFilter, Child[0]=TryStandardMelee, Param[0]=10)
; This should handle free movement awarded from Hit and Run.
+Behaviors=(BehaviorName=SidewinderFreeMovementRetreat, NodeType=Sequence, Child[0]=DidntJustMove, Child[1]=SidewinderRetreatMove)
+Behaviors=(BehaviorName=SidewinderRetreatMove, NodeType=Selector, Child[0]=FallBackWithLoS, Child[1]=FallBack, Child[2]=DoIfFlankedMove)

; Viper flank punishment
+Behaviors=(BehaviorName=ViperPunishFlanked, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectFlankedEnemyTarget, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=ViperPunishFlanked75, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectFlankedEnemyTarget, Child[2]=ViperTryFlankShot75)
+Behaviors=(BehaviorName=ViperTryFlankShot75, NodeType=RandFilter, Child[0]=SelectAbility-StandardShot, Param[0]=75)

; Randomly attempt to bind opponents at range 33% of the time, or adjacent targets.
+Behaviors=(BehaviorName=TryBindSometimes, NodeType=RandFilter, Child[0]=TryStandardMelee, Param[0]=33)
+Behaviors=(BehaviorName=TryBindPriorityLoneTarget, NodeType=Sequence, Child[0]=ViperOneEnemyVisible, Child[1]=TryStandardMelee)
; Poison spit single is valid only if the Viper is damaged.
+Behaviors=(BehaviorName=TryPoisonSpitSingleIfDamaged, NodeType=Sequence, Child[0]=HasWounds, Child[1]=TryPoisonSpitSingle)
+Behaviors=(BehaviorName=ViperOneEnemyVisible, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]="==", Param[2]=1)
   
;*****************************************************************************************************************************************************************************************************
; LW NAJA V1.0 26-11-2017
;*****************************************************************************************************************************************************************************************************
; The Naja supports bind and poison spit, but it might or might not have that ability. It's just going to be skipped if it doesnt, so it's ok.
; If it does get awarded Poison Spit, its going to use it liberally as it feels threatened.
; Movement somewhat reduced from original LW AI, too much moving around not enough firing.

+Behaviors=(BehaviorName="LWNajaRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=LWNajaRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=LWNajaRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=LWNajaRedAbilitySelector)
+Behaviors=(BehaviorName=LWNajaRedAbilitySelector, NodeType=Selector, Child[0]=ViperMimicBeaconBehavior, Child[1]=LWNajaRedFirstAction, Child[2]=LWNajaRedLastAction)

+Behaviors=(BehaviorName=LWNajaRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=LWNajaRedFirstActionSelector)
+Behaviors=(BehaviorName=LWNajaRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryBindPriorityLoneTarget, \\
	Child[1]=TryBindRarely, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=NeedsReload, \\
	Child[4]=ViperPunishFlanked, \\
	Child[5]=ShootIfIdeal, \\
	Child[6]=TryToCleanseBurning, \\
	Child[7]=TryPoisonSpit, \\
	Child[8]=TryPoisonSpitSingle, \\
	Child[9]=RandMoveIfEnemyClose, \\
	Child[10]=TrySniperShootOrReload, \\
	Child[11]=MoveIfAnyEnemyWithin12Tiles, \\
	Child[12]=HuntEnemyWithCoverSeeNoOne, \\
	Child[13]=SniperMove)

+Behaviors=(BehaviorName=LWNajaRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=LWNajaRedLastActionSelector)
+Behaviors=(BehaviorName=LWNajaRedLastActionSelector, NodeType=Selector, \\
	Child[0]=StandardMeleeAttack, \\
	Child[1]=BOTEEmergencyBurnRemoval, \\
	Child[2]=ViperPunishFlanked, \\
	Child[3]=ShootIfIdeal, \\
	Child[4]=DoIfFlankedMove, \\
	Child[5]=TryToCleanseBurning, \\
	Child[6]=TryPoisonSpit, \\
	Child[7]=TryPoisonSpitSingle, \\
	Child[8]=MoveIfAnyEnemyWithin12Tiles, \\
	Child[9]=TrySniperShootOrReloadOrOverwatch, \\
	Child[10]=HuntEnemyWithCoverSeeNoOne, \\
	Child[11]=SniperMove, \\
	Child[12]=TryOverwatch, \\
	Child[13]=DoCower)

+Behaviors=(BehaviorName=RandMoveIfEnemyClose, NodeType=RandFilter, Child[0]=MoveIfAnyEnemyWithin12Tiles, Param[0]=25)
+Behaviors=(BehaviorName=MoveIfAnyEnemyWithin12Tiles, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=AnyEnemyWithin12Tiles, Child[2]=SniperMove)
+Behaviors=(BehaviorName=AnyEnemyWithin12Tiles, NodeType=Sequence, Child[0]=SetVisiblePotentialTargetStack, Child[1]=SearchAnyEnemyWithin12Tiles)
+Behaviors=(BehaviorName=SearchAnyEnemyWithin12Tiles, NodeType=Inverter, Child[0]=SearchNoEnemyWithin12Tiles)
+Behaviors=(BehaviorName=SearchNoEnemyWithin12Tiles, NodeType=RepeatUntilFail, Child[0]=EvaluateEnemyWithin12Tiles)
+Behaviors=(BehaviorName=EvaluateEnemyWithin12Tiles, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetDistanceGreaterThan12Tiles)
+Behaviors=(BehaviorName=TargetDistanceGreaterThan12Tiles, NodeType=StatCondition, Param[0]=PotentialTargetDistance, Param[1]=">", Param[2]=18); 18m = 12 tiles

+Behaviors=(BehaviorName=TrySniperShootOrReload, NodeType=Selector, Child[0]=NeedsReload, Child[1]=SniperShootIfAvailable)
+Behaviors=(BehaviorName=SniperShootIfAvailable, NodeType=Sequence, Child[0]=IsAbilityAvailable-SniperStandardFire, Child[1]=SelectTargetForSniperShot, Child[2]=SelectAbility-SniperStandardFire)
+Behaviors=(BehaviorName=SelectTargetForSniperShot, NodeType=Sequence, Child[0]=SetTargetStack-SniperStandardFire, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-SniperStandardFire)

+Behaviors=(BehaviorName=TrySniperShootOrReloadOrOverwatch, NodeType=Selector, Child[0]=NeedsReload, Child[1]=ConsiderTakingSniperOverwatch, Child[2]=SniperShootIfAvailable)
+Behaviors=(BehaviorName=ConsiderTakingSniperOverwatch, NodeType=Selector, Child[0]=TryTwoTurnSniperAttackSupport, Child[1]=ConsiderTakingOverwatchAllUnits, Child[2]=ConsiderTakingOverwatchVIP, Child[3]=ConsiderTakingOverwatchEvac)
+Behaviors=(BehaviorName=TryTwoTurnSniperAttackSupport, NodeType=Sequence, Child[0]=HasTwoTurnAttackTargets, Child[1]=TrySniperOverwatchTwoTurnTarget)
+Behaviors=(BehaviorName=TrySniperOverwatchTwoTurnTarget, NodeType=Sequence, Child[0]=IsAbilityAvailable-SniperRifleOverwatch, Child[1]=RandOverwatch100_50)

+Behaviors=(BehaviorName=IsAbilityAvailable-SniperStandardFire, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-SniperStandardFire, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SniperStandardFire, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-SniperStandardFire, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-SniperStandardFire, NodeType=Action)

+Behaviors=(BehaviorName=IsAbilityAvailable-SniperRifleOverwatch, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-SniperRifleOverwatch, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SniperRifleOverwatch, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-SniperRifleOverwatch, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-SniperRifleOverwatch, NodeType=Action)

; SNIPER MOVEMENT 
+Behaviors=(BehaviorName=FindDestination-MWP_SniperMove, NodeType=Action)
+Behaviors=(BehaviorName=FindDestinationWithLoS-MWP_SniperMove, NodeType=Action)
+Behaviors=(BehaviorName=FindRestrictedDestination-MWP_SniperMove, NodeType=Action)

+Behaviors=(BehaviorName=SniperMove, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=SniperMoveUnsafe)
+Behaviors=(BehaviorName=SniperMoveUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=FindBestSniperDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindBestSniperDestination, NodeType=Selector, Child[0]=FindDestinationWithLoS-MWP_Defensive, Child[1]=FindDestinationWithLoS-MWP_SniperMove, Child[2]=FindDestination-MWP_Fallback, Child[3]=FindDestination-MWP_SniperMove)
+Behaviors=(BehaviorName=SniperMoveWithLoS, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=SniperMoveWithLoSUnsafe)
+Behaviors=(BehaviorName=SniperMoveWithLoSUnsafe, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=FindDestinationWithLoS-MWP_SniperMove, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindFriendlySniperDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAllyLoS, Child[2]=FindRestrictedDestination-MWP_SniperMove)

;*****************************************************************************************************************************************************************************************************
; LW MUTON ELITE M3 (BLUTON) V1.0 26-11-2017
;*****************************************************************************************************************************************************************************************************
; Supports LEU correctly
; Support shielding conditions (Dont shield when shielded already)
; Supports Implacable movement if anyone wants to give it to them. The Bluton will move after bayoneting if capable.

+Behaviors=(BehaviorName="MutonM3_LWRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MutonM3_LWRedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=MutonM3_LWRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MutonM3_LWRedAbilitySelector)
+Behaviors=(BehaviorName=MutonM3_LWRedAbilitySelector, NodeType=Selector, Child[0]=MutonM3MimicBeaconBehavior, Child[1]=MutonM3_LWRedFirstAction, Child[2]=MutonM3_LWRedLastAction)
+Behaviors=(BehaviorName=MutonM3MimicBeaconBehavior, NodeType=RandFilter, Child[0]=MimicBeaconBehavior, Param[0]=50)

+Behaviors=(BehaviorName=MutonM3_LWRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MutonM3_LWRedFirstActionSelector)
+Behaviors=(BehaviorName=MutonM3_LWRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryBayonet, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=TryPersonalShieldHighPriority, \\
	Child[3]=TryMutonGrenadeMany, \\
	Child[4]=NeedsReload, \\
	Child[5]=ShootIfIdeal, \\
	Child[6]=TryLightEmUpSometimes, \\
	Child[7]=TryMutonSuppression, \\
	Child[8]=TryTwoTurnAttackSupportIfSafe, \\
	Child[9]=TryMutonGrenadeSingle, \\
	Child[10]=TryMoveForBayonetStrike, \\
	Child[11]=SelectMove_JobOrAggressive, \\
	Child[12]=HuntEnemyWithCoverSeeNoOne, \\
	Child[13]=TryLightEmUpOrReload)

+Behaviors=(BehaviorName=MutonM3_LWRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MutonM3_LWRedLastActionSelector)
+Behaviors=(BehaviorName=MutonM3_LWRedLastActionSelector, NodeType=Selector, \\
	Child[0]=BayonetImplacableMovement, \\
	Child[1]=StandardMeleeAttack, \\
	Child[2]=TryPersonalShieldHighPriority, \\
	Child[3]=BOTEEmergencyBurnRemoval, \\
	Child[4]=TryMutonGrenadeMany, \\
	Child[5]=TryToCleanseBurning, \\
	Child[6]=NeedsReload, \\
	Child[7]=ShootIfIdeal, \\
	Child[8]=TryPersonalShield, \\
	Child[9]=TryMutonGrenadeSingle, \\
	Child[10]=TryMutonSuppression, \\
	Child[11]=TryTwoTurnAttackSupportIfSafe, \\
	Child[12]=TryLightEmUpOrReloadOrOverwatch, \\
	Child[13]=HuntEnemyWithCoverSeeNoOne, \\
	Child[14]=TryShootOrReloadOrOverwatch, \\
	Child[15]=TryOverwatch, \\
	Child[16]=DoCower)

+Behaviors=(BehaviorName=AffectedByEffect-EnergyShield, NodeType=Condition)
+Behaviors=(BehaviorName=TryLightEmUpSometimes, NodeType=RandFilter, Child[0]=LightEmUpIfAvailable, Param[0]=50)

+Behaviors=(BehaviorName=TryLightEmUpOrReload, NodeType=Selector, Child[0]=LightEmUpIfAvailable, Child[1]=NeedsReload)
+Behaviors=(BehaviorName=TryLightEmUpOrReloadOrOverwatch, NodeType=Selector, Child[0]=NeedsReload, Child[1]=ConsiderTakingOverwatch, Child[2]=LightEmUpIfAvailable)
+Behaviors=(BehaviorName=LightEmUpIfAvailable, NodeType=Sequence, Child[0]=IsAbilityAvailable-LightEmUp, Child[1]=SelectTargetForLightEmUp, Child[2]=SelectAbility-LightEmUp)
+Behaviors=(BehaviorName=SelectTargetForLightEmUp, NodeType=Sequence, Child[0]=SetTargetStack-LightEmUp, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-LightEmUp)

; ---------------- Personal Shield (MutonM3_LW, Elite) --------------------------------------------
+Behaviors=(BehaviorName=TryPersonalShieldHighPriority, NodeType=Sequence, Child[0]=PersonalShieldHighPriorityConditions, Child[1]=TryPersonalShield)
; 2+ Enemies, or 50%- HP or no friends in sight
+Behaviors=(BehaviorName=PersonalShieldHighPriorityConditions, NodeType=Selector, Child[0]=IsBloodied, Child[1]=MultipleEnemiesVisible, Child[2]=NoAlliesVisible)
+Behaviors=(BehaviorName=TryPersonalShield, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=MutonEliteNotShielded, Child[2]=IsAbilityAvailable-PersonalShield, Child[3]=SelectAbility-PersonalShield)
+Behaviors=(BehaviorName=IsAbilityAvailable-PersonalShield, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-PersonalShield, NodeType=Action)
; Dont use Personal Shield if you are Shielded by a Shieldbearer!
+Behaviors=(BehaviorName=MutonEliteNotShielded, NodeType=Inverter, Child[0]=AffectedByEffect-EnergyShield)

; ---------------- LightEmUp (MutonM3_LW, Elite) --------------------------------------------
+Behaviors=(BehaviorName=IsAbilityAvailable-LightEmUp, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-LightEmUp, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-LightEmUp, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-LightEmUp, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-LightEmUp, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-LightEmUp, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToPotentialTargetRange-LightEmUp, NodeType=Action)

; Move in for Bayonet, but only with high health, and not always.
+Behaviors=(BehaviorName=TryMoveForBayonetStrike, NodeType=Sequence, Child[0]=LowEnemyCountOrHighAllyCount, Child[1]=MutonBayonetHPThreshold, Child[2]=MutonMeleeFilter)
+Behaviors=(BehaviorName=MutonBayonetHPThreshold, NodeType=StatCondition, Param[0]=eStat_HP, Param[1]=">=", Param[2]="50%")
+Behaviors=(BehaviorName=MutonMeleeFilter, NodeType=RandFilter, Child[0]=BayonetOrMoveForBayonet, Param[0]=33)
+Behaviors=(BehaviorName=BayonetOrMoveForBayonet, NodeType=Selector, Child[0]=BayonetAttack, Child[1]=MoveMeleeDefensiveIfFirstAbility)
+Behaviors=(BehaviorName=LowEnemyCountOrHighAllyCount, NodeType=Selector, Child[0]=ManyAlliesVisible, Child[1]=LowEnemyCount)

; Muton Suppression
+Behaviors=(BehaviorName=TryMutonSuppression, NodeType=Selector, Child[0]=TryMutonSuppressionSupported, Child[1]=TryMutonSuppressClosest)
+Behaviors=(BehaviorName=TryMutonSuppressClosest, NodeType=Sequence, Child[0]=MutonSuppressionCondition, Child[1]=MutonDoSuppression)
+Behaviors=(BehaviorName=MutonDoSuppression, NodeType=Sequence, Child[0]=IsAbilityAvailable-Suppression, Child[1]=SelectTargetForSuppression, Child[2]=SelectAbility-Suppression)
+Behaviors=(BehaviorName=MutonSuppressionCondition, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MultipleEnemiesVisible, Child[2]=MutonOneOrMoreOverwatchingTeammates, Child[3]=SuppressIdealChanceFilter)
+Behaviors=(BehaviorName=MutonOneOrMoreOverwatchingTeammates, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]=">=", Param[2]="1", Param[3]="1")
+Behaviors=(BehaviorName=TryMutonSuppressionSupported, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MultipleEnemiesVisible, Child[2]=MutonRandomSuppression)
+Behaviors=(BehaviorName=MutonRandomSuppression, NodeType=RandFilter, Child[0]=MutonDoSuppression, Param[0]=15)

; Grenading
+Behaviors=(BehaviorName=TryMutonGrenadeMany, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=FindPotentialAoETargets-MutonGrenadeManyProfile, Child[2]=SelectAoETarget-MutonGrenadeManyProfile, Child[3]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=TryMutonGrenadeSingle, NodeType=Sequence, Child[0]=MutonSingleGrenadeFilter, Child[1]=FindPotentialAoETargets-MutonGrenadeSingleProfile, Child[2]=SelectAoETarget-MutonGrenadeSingleProfile, Child[3]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=MutonSingleGrenadeFilter, NodeType=RandFilter, Child[0]=IsAbilityAvailable-ThrowGrenade, Param[0]=20)

+Behaviors=(BehaviorName=FindPotentialAoETargets-MutonGrenadeSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-MutonGrenadeManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-MutonGrenadeSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-MutonGrenadeManyProfile, NodeType=Action)
+Behaviors=(BehaviorName=OneEnemyVisible, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]="==", Param[2]=1)
+Behaviors=(BehaviorName=ManyAlliesVisible, NodeType=StatCondition, Param[0]=VisibleAllyCount, Param[1]=">", Param[2]=1)
+Behaviors=(BehaviorName=LowEnemyCount, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]="<=", Param[2]=2)

; If the Muton has Implacable or other movement providing abilities after Bayoneting, it's going to move.
+Behaviors=(BehaviorName=BayonetImplacableMovement, NodeType=Sequence, Child[0]=BayonetOrBayonetChargeCheck, Child[1]=BayonetImplacableMove)
+Behaviors=(BehaviorName=BayonetOrBayonetChargeCheck, NodeType=Selector, Child[0]=WasLastAbility-Bayonet, Child[1]=WasLastAbility-BayonetCharge)
+Behaviors=(BehaviorName=BayonetImplacableMove, NodeType=Selector, Child[0]=DoIfFlankedMove, Child[1]=SkipMove)
+Behaviors=(BehaviorName=WasLastAbility-Bayonet, NodeType=Condition)
+Behaviors=(BehaviorName=WasLastAbility-BayonetCharge, NodeType=Condition)

;*****************************************************************************************************************************************************************************************************
; LW MUTON M2 (CENTURION BEASTMASTER) V1.0
;*****************************************************************************************************************************************************************************************************
; Bayonet charge should happened sporadically, and only on Classic+ difficulty.
; Warcrying has exceptions for when you're already on Warcry or if the target is on Warcry it doesnt count as a valid target for refresh. This should help for multi-Centurion groups.

+Behaviors=(BehaviorName="MutonM2_LWRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MutonM2_LWRedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=MutonM2_LWRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MutonM2_LWRedAbilitySelector)
+Behaviors=(BehaviorName=MutonM2_LWRedAbilitySelector, NodeType=Selector, Child[0]=MutonM2MimicBeaconBehavior, Child[1]=MutonM2_LWRedFirstAction, Child[2]=MutonM2_LWRedLastAction)
+Behaviors=(BehaviorName=MutonM2MimicBeaconBehavior, NodeType=RandFilter, Child[0]=MimicBeaconBehavior, Param[0]=40)

+Behaviors=(BehaviorName=MutonM2_LWRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MutonM2_LWRedFirstActionSelector)
+Behaviors=(BehaviorName=MutonM2_LWRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryBayonet, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=TryMutonGrenadeMany, \\
	Child[3]=NeedsReload, \\
	Child[4]=ShootIfIdeal, \\
	Child[5]=TryWarCryOnMultipleTargets, \\
	Child[6]=TryMutonSuppression, \\
	Child[7]=TryTwoTurnAttackSupportIfSafe, \\
	Child[8]=TryMutonGrenadeSingle, \\
	Child[9]=TryBayonetChargeSometimes, \\
	Child[10]=BayonetImplacableMovement, \\
	Child[11]=SelectMove_JobOrAggressive, \\
	Child[12]=HuntEnemyWithCoverSeeNoOne, \\
	Child[13]=TryShootOrReloadOrOverwatch)

+Behaviors=(BehaviorName=MutonM2_LWRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MutonM2_LWRedLastActionSelector)
+Behaviors=(BehaviorName=MutonM2_LWRedLastActionSelector, NodeType=Selector, \\
	Child[0]=BayonetImplacableMovement, \\
	Child[1]=StandardMeleeAttack, \\
	Child[2]=BOTEEmergencyBurnRemoval, \\
	Child[3]=TryMutonGrenadeMany, \\
	Child[4]=TryToCleanseBurning, \\
	Child[5]=NeedsReload, \\
	Child[6]=ShootIfIdeal, \\
	Child[7]=TryWarCryOnMultipleTargets, \\
	Child[8]=TryMutonSuppression, \\
	Child[9]=TryTwoTurnAttackSupportIfSafe, \\
	Child[10]=TryMutonGrenadeSingle, \\
	Child[11]=TryShootOrReloadOrOverwatch, \\
	Child[12]=HuntEnemyWithCoverSeeNoOne, \\
	Child[13]=TryWarCryOnFewTargets, \\
	Child[14]=TryOverwatch, \\
	Child[15]=SelectMove_JobOrAggressive, \\
	Child[16]=DoCower)

+Behaviors=(BehaviorName=HasValidTarget-BayonetCharge, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-BayonetCharge, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-BayonetCharge, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-BayonetCharge, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-BayonetCharge, NodeType=Action)
+Behaviors=(BehaviorName=EnoughAlliesVisible, NodeType=StatCondition, Param[0]=VisibleAllyCount, Param[1]=">", Param[2]=3)

+Behaviors=(BehaviorName=TryBayonetChargeSometimes, NodeType=RandFilter, Child[0]=TryBayonetCharge, Param[0]=33)
+Behaviors=(BehaviorName=TryBayonetCharge, NodeType=Sequence, Child[0]=IsAbilityReady-BayonetCharge, Child[1]=BayonetChargeConditions, Child[2]=BayonetChargeStepSelector)
; Bayonet Charge: Classic+ only. Mutons are aggressive and violent, but not stupid.
+Behaviors=(BehaviorName=BayonetChargeConditions, NodeType=Sequence, Child[0]=IsDifficultyAboveNormal, Child[1]=AlliesVisibleOrLoneEnemy, Child[2]=NotLowHP, Child[3]=MutonLessThanThreeEnemyOverwatchers, Child[4]=NoVisibleSuppressors)
+Behaviors=(BehaviorName=AlliesVisibleOrLoneEnemy, NodeType=Selector, Child[0]=AnyAlliesVisible, Child[1]=OneEnemyVisible)
+Behaviors=(BehaviorName=MutonLessThanThreeEnemyOverwatchers,    NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]="<", Param[2]="3")
+Behaviors=(BehaviorName=BayonetChargeStepSelector, NodeType=Selector, Child[0]=BayonetChargeAttack, Child[1]=MoveMeleeDefensiveIfFirstAbility)
+Behaviors=(BehaviorName=BayonetChargeAttack, NodeType=Sequence, Child[0]=IsAbilityAvailable-BayonetCharge, Child[1]=SelectTargetForBayonetCharge, Child[2]=SelectAbility-BayonetCharge)

+Behaviors=(BehaviorName=SelectTargetForBayonetCharge, NodeType=Sequence, Child[0]=SetTargetStack-BayonetCharge, Child[1]=SelectBestTargetForStandardMelee, Child[2]=HasValidTarget-BayonetCharge)
+Behaviors=(BehaviorName=SelectBestTargetForBayonetCharge, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialMeleeTarget)

; ---------------- WarCry (MutonM2_LW, Centurion) --------------------------------------------
+Behaviors=(BehaviorName=AffectedByEffect-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=TargetAffectedByEffect-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=HasValidTarget-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-WarCry, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-WarCry, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-WarCry, NodeType=Action)
+Behaviors=(BehaviorName=HasMultipleWarCryTargets, NodeType=StatCondition, Param[0]=AbilityTargetUnitCount-WarCry, Param[1]=">=", Param[2]=4) ; Param[2] count includes self.
+Behaviors=(BehaviorName=HasFewWarCryTargets, NodeType=StatCondition, Param[0]=AbilityTargetUnitCount-WarCry, Param[1]=">=", Param[2]=3) ; Param[2] count includes self.
+Behaviors=(BehaviorName=IsTargetInMovementRange-WarCry, NodeType=Condition)
; New checks if already under the effects, might not work but it SHOULD.
+Behaviors=(BehaviorName=UserNotOnWarCryAlready, NodeType=Inverter, Child[0]=AffectedByEffect-WarCry)
+Behaviors=(BehaviorName=TargetNotOnWarCryAlready, NodeType=Inverter, Child[0]=TargetAffectedByEffect-WarCry )

+Behaviors=(BehaviorName=TryWarCryOnMultipleTargets, NodeType=Sequence, Child[0]=UserNotOnWarCryAlready, Child[1]=IsAbilityAvailable-WarCry, Child[2]=HasMultipleWarCryTargets, Child[3]=NotLowHP, Child[4]=SelectAbility-WarCry)
+Behaviors=(BehaviorName=TryWarCryOnFewTargets, NodeType=Sequence, Child[0]=UserNotOnWarCryAlready, Child[1]=IsAbilityAvailable-WarCry, Child[2]=HasFewWarCryTargets, Child[3]=NotLowHP, Child[4]=SelectAbility-WarCry)

+Behaviors=(BehaviorName=SelectPotentialTargetForWarCry, NodeType=Sequence, Child[0]=SetPotentialAllyTargetStack, Child[1]=SelectBestAllyTargetForWarCry, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestAllyTargetForWarCry, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialWarCryTarget)
+Behaviors=(BehaviorName=EvaluatePotentialWarCryTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=ScoreBestTargetForWarCry, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=ScoreBestTargetForWarCry, NodeType=Successor, Child[0]=TargetScoreReachableForWarCry)
+Behaviors=(BehaviorName=TargetScoreReachableForWarCry, NodeType=Sequence, Child[0]=IsTargetInMovementRange-WarCry, Child[1]=AvoidBoundAndPanickedTargets, Child[2]=ScoreByHP, Child[3]=TargetNotOnWarCryAlready)
+Behaviors=(BehaviorName=ScoreByHP, NodeType=Sequence, Child[0]=TargetScoreByScaledMaxStat-eStat_HP, Child[1]=TargetScoreByScaledCurrStat-eStat_HP)
+Behaviors=(BehaviorName=TargetScoreByScaledMaxStat-eStat_HP, NodeType=Action, Param[0]=10)
+Behaviors=(BehaviorName=TargetScoreByScaledCurrStat-eStat_HP, NodeType=Action, Param[0]=1)